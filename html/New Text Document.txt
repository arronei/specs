<h4 id="element-definitions">Element definitions</h4>

  <p>Each element in this specification has a definition that includes the following
  information:</p>

  <dl>

   <dt><dfn data-x="concept-element-categories">Categories</dfn></dt>

   <dd><p>A list of <span data-x="content categories">categories</span> to which the element belongs.
   These are used when defining the <span>content models</span> for each element.</p></dd>


   <dt><dfn data-x="concept-element-contexts">Contexts in which this element can be used</dfn></dt>

   <dd>

    <p>A <em>non-normative</em> description of where the element can be used. This information is
    redundant with the content models of elements that allow this one as a child, and is provided
    only as a convenience.</p>

    <p class="note">For simplicity, only the most specific expectations are listed. For example, an
    element that is both <span>flow content</span> and <span>phrasing content</span> can be used
    anywhere that either <span>flow content</span> or <span>phrasing content</span> is expected, but
    since anywhere that <span>flow content</span> is expected, <span>phrasing content</span> is also
    expected (since all <span>phrasing content</span> is <span>flow content</span>), only "where
    <span>phrasing content</span> is expected" will be listed.</p>

   </dd>


   <dt><dfn data-x="concept-element-content-model">Content model</dfn></dt>

   <dd><p>A normative description of what content must be included as children and descendants of
   the element.</p></dd>


   <dt><dfn data-x="concept-element-tag-omission">Tag omission in text/html</dfn></dt>

   <dd><p>A <em>non-normative</em> description of whether, in the <code>text/html</code> syntax, the
   <span data-x="syntax-start-tag">start</span> and <span data-x="syntax-end-tag">end</span> tags can
   be omitted. This information is redundant with the normative requirements given in the <span
   data-x="syntax-tag-omission">optional tags</span> section, and is provided in the element
   definitions only as a convenience.</p></dd>


   <dt><dfn data-x="concept-element-attributes">Content attributes</dfn></dt>

   <dd><p>A normative list of attributes that may be specified on the element (except where
   otherwise disallowed), along with non-normative descriptions of those attributes. (The content to
   the left of the dash is normative, the content to the right of the dash is not.)</p></dd>

   <!-- FORK start: description of ARIA info -->
   <dt>Allowed <a href="#aria-role-attribute">ARIA role attribute</a> values</dt>

   <dd><p>A normative list of <a href="#aria-role-attribute">ARIA role attribute</a> values
   that may be specified on the element (except where
   otherwise disallowed). Each value is linked to a non
   normative description.</p></dd>

   <dt>Allowed <a href="#state-and-property-attributes">ARIA state and property attributes</a></dt>

   <dd><p>Links to the <a href="#index-aria-global">Global aria-* attributes</a> list and the <a href="#allowed-aria-roles,-states-and-properties">allowed roles, states and properties</a> table.</p></dd>

<!-- FORK end: description of ARIA info -->

   <dt><dfn data-x="concept-element-dom">DOM interface</dfn></dt>
   <dd><p>A normative definition of a DOM interface that such elements must implement.</p></dd>

  </dl>

  <p>This is then followed by a description of what the element <span>represents</span>, along with
  any additional normative conformance criteria that may apply to authors<span
  class="impl"> and implementations</span>. Examples are sometimes also included.</p>


  <h5 id="attributes">Attributes</h5>

  <p id="attribute-text">Except where otherwise specified, attributes on <span>HTML elements</span>
  may have any string value, including the empty string. Except where explicitly stated, there is no
  restriction on what text can be specified in such attributes.</p>



  <h4 id="content-models"><dfn>Content models</dfn></h4>

  <p>Each element defined in this specification has a content model: a description of the element's
  expected <span data-x="concept-html-contents">contents</span>. An <span data-x="HTML elements">HTML
  element</span> must have contents that match the requirements described in the element's content
  model. The <dfn data-x="concept-html-contents">contents</dfn> of an element are its children in the
  DOM, except for <code>template</code> elements, where the children are those in the <span>template
  contents</span> (a separate <code>DocumentFragment</code> assigned to the element when the element
  is created).</p>

  <p>The <span data-x="space character">space characters</span> are always allowed between elements.
  User agents represent these characters between elements in the source markup as <code>Text</code>
  nodes in the DOM.<!-- not a conf criteria since the parser now requires this --> Empty
  <code>Text</code> nodes and <code>Text</code> nodes consisting of just sequences of those
  characters are considered <dfn>inter-element whitespace</dfn>.</p>

  <p><span>Inter-element whitespace</span>, comment nodes, and processing instruction nodes must be
  ignored when establishing whether an element's contents match the element's content model or not,
  and must be ignored when following algorithms that define document and element semantics.</p>

  <p class="note">Thus, an element <var>A</var> is said to be <i>preceded or followed</i>
  by a second element <var>B</var> if <var>A</var> and <var>B</var> have
  the same parent node and there are no other element nodes or <code>Text</code> nodes (other than
  <span>inter-element whitespace</span>) between them. Similarly, a node is the <i>only child</i> of
  an element if that element contains no other nodes other than <span>inter-element
  whitespace</span>, comment nodes, and processing instruction nodes.</p>

  <p>Authors must not use <span>HTML elements</span> anywhere except where they are explicitly
  allowed, as defined for each element, or as explicitly required by other specifications. For XML
  compound documents, these contexts could be inside elements from other namespaces, if those
  elements are defined as providing the relevant contexts.</p>

  <div class="example">
   <p>For example, the Atom specification defines a <code>content</code> element. When its
   <code>type</code> attribute has the value <code>xhtml</code>, the Atom
   specification requires that it contain a single HTML <code>div</code> element. Thus, a
   <code>div</code> element is allowed in that context, even though this is not explicitly
   normatively stated by this specification. <a href="#refsATOM">\[ATOM]</a></p>
  </div>

  <p>In addition, <span>HTML elements</span> may be orphan nodes (i.e. without a parent node).</p>

  <div class="example">

   <p>For example, creating a <code>td</code> element and storing it in a global variable in a
   script is conforming, even though <code>td</code> elements are otherwise only supposed to be used
   inside <code>tr</code> elements.</p>

   <pre>var data = {
  name: "Banana",
  cell: document.createElement('td'),
};</pre>

  </div>


  <h5 id="the-"nothing"-content-model">The "nothing" content model</h5>

  <p>When an element's content model is <dfn data-x="concept-content-nothing">nothing</dfn>, the
  element must contain no <code>Text</code> nodes (other than <span>inter-element whitespace</span>)
  and no element nodes.</p>

  <p class="note">Most HTML elements whose content model is "nothing" are also, for convenience,
  <span>void elements</span> (elements that have no <span data-x="syntax-end-tag">end tag</span> in
  the <a href="#syntax">HTML syntax</a>). However, these are entirely separate concepts.</p>


  <h5 id="kinds-of-content">Kinds of content</h5>

  <p>Each element in HTML falls into zero or more <dfn data-x="content categories">categories</dfn>
  that group elements with similar characteristics together. The following broad categories are used
  in this specification:</p>

  <ul class="brief">
   <li><span>Metadata content</span></li>
   <li><span>Flow content</span></li>
   <li><span>Sectioning content</span></li>
   <li><span>Heading content</span></li>
   <li><span>Phrasing content</span></li>
   <li><span>Embedded content</span></li>
   <li><span>Interactive content</span></li>
  </ul>

  <p class="note">Some elements also fall into other categories, which are defined in other parts of
  this specification.</p>

  <p>These categories are related as follows:</p>

  <!-- The following image is decorative; the 'as follows' bit above refers to the paragraph after it, which entirely duplicates the content of
       this image. So setting an alt="" on this would be bogus (indeed, it would be non-conforming and bad for accessibility.) -->
  <p><object width="1000" height="288" data="images/content-venn.svg"><img src="images/content-venn.png" alt="" width=512 height=288></object></p>

  <p>Sectioning content, heading content, phrasing content, embedded content, and interactive
  content are all types of flow content. Metadata is sometimes flow content. Metadata and
  interactive content are sometimes phrasing content. Embedded content is also a type of phrasing
  content, and sometimes is interactive content.</p>

  <p>Other categories are also used for specific purposes, e.g. form controls are specified using a
  number of categories to define common requirements. Some elements have unique requirements and do
  not fit into any particular category.</p>


  <h6 id="metadata-content">Metadata content</h6>

  <p><dfn>Metadata content</dfn> is content that sets up the presentation or behavior of the rest of
  the content, or that sets up the relationship of the document with other documents, or that
  conveys other "out of band" information.</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>base</code></li>
   <li><code>link</code></li>
   <li><code>meta</code></li>
   <li><code>noscript</code></li>
   <li><code>script</code></li>
   <li><code>style</code></li>
   <li><code>template</code></li>
   <li><code>title</code></li>
  </ul>

  <p>Elements from other namespaces whose semantics are primarily metadata-related (e.g. RDF) are
  also <span>metadata content</span>.</p>

  <div class="example">

   <p>Thus, in the XML serialization, one can use RDF, like this:</p>

   <pre>&lt;html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:r="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
 &lt;head>
  &lt;title>Hedral's Home Page&lt;/title>
  &lt;r:RDF>
   &lt;Person xmlns="http://www.w3.org/2000/10/swap/pim/contact#"
           r:about="http://hedral.example.com/#">
    &lt;fullName>Cat Hedral&lt;/fullName>
    &lt;mailbox r:resource="mailto:hedral@damowmow.com"/>
    &lt;personalTitle>Sir&lt;/personalTitle>
   &lt;/Person>
  &lt;/r:RDF>
 &lt;/head>
 &lt;body>
  &lt;h1>My home page&lt;/h1>
  &lt;p>I like playing with string, I guess. Sister says squirrels are fun
  too so sometimes I follow her to play with them.&lt;/p>
 &lt;/body>
&lt;/html></pre>

   <p>This isn't possible in the HTML serialization, however.</p>

  </div>


  <h6 id="flow-content">Flow content</h6>

  <p>Most elements that are used in the body of documents and applications are categorized as
  <dfn>flow content</dfn>.</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>a</code></li>
   <li><code>abbr</code></li>
   <li><code>address</code></li>
   <li><code>area</code> (if it is a descendant of a <code>map</code> element)</li>
   <li><code>article</code></li>
   <li><code>aside</code></li>
   <li><code>audio</code></li>
   <li><code>b</code></li>
   <li><code>bdi</code></li>
   <li><code>bdo</code></li>
   <li><code>blockquote</code></li>
   <li><code>br</code></li>
   <li><code>button</code></li>
   <li><code>canvas</code></li>
   <li><code>cite</code></li>
   <li><code>code</code></li>
   <li><code>data</code></li>
   <li><code>datalist</code></li>
   <li><code>del</code></li>
   <li><code>details</code></li>
   <li><code>dfn</code></li>
   <li><code>dialog</code></li>
   <li><code>div</code></li>
   <li><code>dl</code></li>
   <li><code>em</code></li>
   <li><code>embed</code></li>
   <li><code>fieldset</code></li>
   <li><code>figure</code></li>
   <li><code>footer</code></li>
   <li><code>form</code></li>
   <li><code>h1</code></li>
   <li><code>h2</code></li>
   <li><code>h3</code></li>
   <li><code>h4</code></li>
   <li><code>h5</code></li>
   <li><code>h6</code></li>
   <li><code>header</code></li>
   <li><code>hr</code></li>
   <li><code>i</code></li>
   <li><code>iframe</code></li>
   <li><code>img</code></li>
   <li><code>input</code></li>
   <li><code>ins</code></li>
   <li><code>kbd</code></li>
   <li><code>keygen</code></li>
   <li><code>label</code></li>
   <li><code>link</code> (if the <code data-x="attr-itemprop">itemprop</code> attribute is present)</li>
   <li><code>main</code></li>
   <li><code>map</code></li>
   <li><code>mark</code></li>
   <li><code>math</code></li>
   <li><code>menu</code></li>
   <li><code>meta</code> (if the <code data-x="attr-itemprop">itemprop</code> attribute is present)</li>
   <li><code>meter</code></li>
   <li><code>nav</code></li>
   <li><code>noscript</code></li>
   <li><code>object</code></li>
   <li><code>ol</code></li>
   <li><code>output</code></li>
   <li><code>p</code></li>
   <li><code>picture</code></li>
   <li><code>pre</code></li>
   <li><code>progress</code></li>
   <li><code>q</code></li>
   <li><code>ruby</code></li>
   <li><code>s</code></li>
   <li><code>samp</code></li>
   <li><code>script</code></li>
   <li><code>section</code></li>
   <li><code>select</code></li>
   <li><code>small</code></li>
   <li><code>span</code></li>
   <li><code>strong</code></li>
   <li><code>style</code> (if the <code data-x="attr-style-scoped">scoped</code> attribute is present)</li>
   <li><code>sub</code></li>
   <li><code>sup</code></li>
   <li><code>svg</code></li>
   <li><code>table</code></li>
   <li><code>template</code></li>
   <li><code>textarea</code></li>
   <li><code>time</code></li>
   <li><code>u</code></li>
   <li><code>ul</code></li>
   <li><code>var</code></li>
   <li><code>video</code></li>
   <li><code>wbr</code></li>
   <li><span data-x="text content">Text</span></li>
  </ul>


  <h6 id="sectioning-content">Sectioning content</h6>

  <p><dfn>Sectioning content</dfn> is content that defines the scope of <span data-x="heading
  content">headings</span> and <span data-x="footer">footers</span>.</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>article</code></li>
   <li><code>aside</code></li>
   <li><code>nav</code></li>
   <li><code>section</code></li>
  </ul>

  <p>Each <span>sectioning content</span> element potentially has a heading and an
  <span>outline</span>. See the section on <span>headings and sections</span> for further
  details.</p>

  <p class="note">There are also certain elements that are <span data-x="sectioning root">sectioning
  roots</span>. These are distinct from <span>sectioning content</span>, but they can also have an
  <span>outline</span>.</p>


  <h6 id="heading-content">Heading content</h6>

  <p><dfn>Heading content</dfn> defines the header of a section (whether explicitly marked up using
  <span>sectioning content</span> elements, or implied by the heading content itself).</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>h1</code></li>
   <li><code>h2</code></li>
   <li><code>h3</code></li>
   <li><code>h4</code></li>
   <li><code>h5</code></li>
   <li><code>h6</code></li>
  </ul>


  <h6 id="phrasing-content">Phrasing content</h6>

  <p><dfn>Phrasing content</dfn> is the text of the document, as well as elements that mark up that
  text at the intra-paragraph level. Runs of <span>phrasing content</span> form <span
  data-x="paragraph">paragraphs</span>.</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>a</code></li>
   <li><code>abbr</code></li>
   <li><code>area</code> (if it is a descendant of a <code>map</code> element)</li>
   <li><code>audio</code></li>
   <li><code>b</code></li>
   <li><code>bdi</code></li>
   <li><code>bdo</code></li>
   <li><code>br</code></li>
   <li><code>button</code></li>
   <li><code>canvas</code></li>
   <li><code>cite</code></li>
   <li><code>code</code></li>
   <li><code>data</code></li>
   <li><code>datalist</code></li>
   <li><code>del</code></li>
   <li><code>dfn</code></li>
   <li><code>em</code></li>
   <li><code>embed</code></li>
   <li><code>i</code></li>
   <li><code>iframe</code></li>
   <li><code>img</code></li>
   <li><code>input</code></li>
   <li><code>ins</code></li>
   <li><code>kbd</code></li>
   <li><code>keygen</code></li>
   <li><code>label</code></li>
   <li><code>link</code> (if the <code data-x="attr-itemprop">itemprop</code> attribute is present)</li>
   <li><code>map</code></li>
   <li><code>mark</code></li>
   <li><code>math</code></li>
   <li><code>meta</code> (if the <code data-x="attr-itemprop">itemprop</code> attribute is present)</li>
   <li><code>meter</code></li>
   <li><code>noscript</code></li>
   <li><code>object</code></li>
   <li><code>output</code></li>
   <li><code>picture</code></li>
   <li><code>progress</code></li>
   <li><code>q</code></li>
   <li><code>ruby</code></li>
   <li><code>s</code></li>
   <li><code>samp</code></li>
   <li><code>script</code></li>
   <li><code>select</code></li>
   <li><code>small</code></li>
   <li><code>span</code></li>
   <li><code>strong</code></li>
   <li><code>sub</code></li>
   <li><code>sup</code></li>
   <li><code>svg</code></li>
   <li><code>template</code></li>
   <li><code>textarea</code></li>
   <li><code>time</code></li>
   <li><code>u</code></li>
   <li><code>var</code></li>
   <li><code>video</code></li>
   <li><code>wbr</code></li>
   <li><span data-x="text content">Text</span></li>
  </ul>

  <p class="note">Most elements that are categorized as phrasing content can only contain elements
  that are themselves categorized as phrasing content, not any flow content.</p>

  <p><dfn data-x="text content">Text</dfn>, in the context of content models, means either nothing,
  or <code>Text</code> nodes. <span data-x="text content">Text</span> is sometimes used as a content
  model on its own, but is also <span>phrasing content</span>, and can be <span>inter-element
  whitespace</span> (if the <code>Text</code> nodes are empty or contain just <span data-x="space
  character">space characters</span>).</p>

  <p><code>Text</code> nodes and attribute values must consist of <span data-x="Unicode
  character">Unicode characters</span>, must not contain U+0000 characters, must not contain
  permanently undefined Unicode characters (noncharacters), and must not contain <span>control characters</span>
  other than <span data-x="space character">space characters</span>.

  <!--<code>Text</code> nodes and attribute values may begin with an <i>isolated combining
  character</i>.--> <!-- commented out since nothing disallows it currently, so it's implicit;
  however, if we ever make charmod a normative reference, this will be needed to override it -->
  <!-- see also https://www.w3.org/Bugs/Public/show_bug.cgi?id=13502#c22 -->

  This specification includes extra constraints on the exact value of <code>Text</code> nodes and
  attribute values depending on their precise context.

  <!-- <a href="#refsUNICODE">\[UNICODE]</a>-->

  </p>



  <h6 id="embedded-content">Embedded content</h6>

  <p><dfn id="embedded-content-category">Embedded content</dfn> is content that imports another
  resource into the document, or content from another vocabulary that
  is inserted into the document.</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>audio</code></li>
   <li><code>canvas</code></li>
   <li><code>embed</code></li>
   <li><code>iframe</code></li>
   <li><code>img</code></li>
   <li><code>math</code></li>
   <li><code>object</code></li>
   <li><code>picture</code></li>
   <li><code>svg</code></li>
   <li><code>video</code></li>
  </ul>

  <p>Elements that are from namespaces other than the <span>HTML namespace</span> and that convey
  content but not metadata, are <span>embedded content</span> for the purposes of the content models
  defined in this specification. (For example, MathML, or SVG.)</p>

  <p>Some embedded content elements can have <dfn>fallback content</dfn>: content that is to be used
  when the external resource cannot be used (e.g. because it is of an unsupported format). The
  element definitions state what the fallback is, if any.</p>
  <!-- we might not need to define fallback content at all. consider removing it if we don't end up
  using it anywhere (e.g. Selection) -->


  <h6 id="interactive-content">Interactive content</h6>

<!--
TESTS:
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20html%3E%0A%3Cp%20tabindex%3D1%3Etest%20%3Ca%20href%3D%22%22%3E%20%3Cem%3Etest%3C/em%3E%20%3C/a%3E%0A%3Cscript%3E%0A%20function%20test%20%28e%29%20%7B%20w%28e.type%20+%20%27%20on%20%27%20+%20e.target.tagName%20+%20%27%20through%20%27%20+%20e.currentTarget.tagName%29%3B%20%7D%0A%20document.getElementsByTagName%28%27a%27%29%5B0%5D.addEventListener%28%27click%27%2C%20test%2C%20false%29%3B%0A%20document.getElementsByTagName%28%27a%27%29%5B0%5D.addEventListener%28%27DOMActivate%27%2C%20test%2C%20false%29%3B%0A%20document.getElementsByTagName%28%27p%27%29%5B0%5D.addEventListener%28%27click%27%2C%20test%2C%20false%29%3B%0A%20document.getElementsByTagName%28%27p%27%29%5B0%5D.addEventListener%28%27DOMActivate%27%2C%20test%2C%20false%29%3B%0A%3C/script%3E%0A
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20HTML%3E%0A%3Ca%20href%3Dhttp%3A//google.com/%20target%3Da%3EA%3C/a%3E%3Ca%20href%3Dhttp%3A//yahoo.com/%20target%3Db%3EB%3C/a%3E%3Cbr%3E%0A%3Ciframe%20name%3Da%3E%3C/iframe%3E%3Ciframe%20name%3Db%3E%3C/iframe%3E%0A%3Cscript%3E%0A%20var%20a%20%3D%20document.getElementsByTagName%28%27a%27%29%5B0%5D%3B%0A%20var%20b%20%3D%20document.getElementsByTagName%28%27a%27%29%5B1%5D%3B%0A%20a.appendChild%28b%29%3B%0A%3C/script%3E
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20HTML%3E%0A%3Cform%20action%3D%22http%3A//google.com/%22%20onsubmit%3D%22w%28%27onsubmit%27%29%22%3E%3Cem%3EA%3C/em%3E%3C/form%3E%0A%3Cscript%3E%0Adocument.getElementsByTagName%28%27form%27%29%5B0%5D.attachEvent%28%27onsubmit%27%2C%20function%20%28%29%20%7B%20w%28%27submit%20fired%27%29%20%7D%29%3B%0Adocument.getElementsByTagName%28%27form%27%29%5B0%5D.fireEvent%28%27onsubmit%27%29%3B%0A%3C/script%3E
http://software.hixie.ch/utilities/js/live-dom-viewer/?%3C%21DOCTYPE%20HTML%3E%0A%3Cform%20action%3D%22http%3A//google.com/%22%3EX%3C/form%3E%0A%3Cscript%3E%0Avar%20evt%20%3D%20document.createEvent%28%22Events%22%29%3B%0Aevt.initEvent%28%22submit%22%2C%20true%2C%20true%29%3B%0Adocument.getElementsByTagName%28%27form%27%29%5B0%5D.dispatchEvent%28evt%29%3B%0A%3C/script%3E
-->

  <p><dfn>Interactive content</dfn> is content that is specifically intended for user
  interaction.</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>a</code></li>
   <li><code>audio</code> (if the <code data-x="attr-media-controls">controls</code> attribute is present)</li>
   <li><code>button</code></li>
   <li><code>details</code></li>
   <li><code>embed</code></li>
   <li><code>iframe</code></li>
   <li><code>img</code> (if the <code data-x="attr-hyperlink-usemap">usemap</code> attribute is present)</li>
   <li><code>input</code> (if the <code data-x="attr-input-type">type</code> attribute is <em>not</em> in the <span data-x="attr-input-type-hidden">Hidden</span> state)</li>
   <li><code>keygen</code></li>
   <li><code>label</code></li>
   <li><code>object</code> (if the <code data-x="attr-hyperlink-usemap">usemap</code> attribute is present)<!-- see also comment in <object> element section --></li>
   <li><code>select</code></li>
   <li><code>textarea</code></li>
   <li><span data-x="sorting interface th element">sorting interface <code>th</code> elements</span></li>
   <li><code>video</code> (if the <code data-x="attr-media-controls">controls</code> attribute is present)</li>
  </ul>

  <p>The <code data-x="attr-tabindex">tabindex</code> attribute can also make any element into
  <span>interactive content</span>.</p>



  <h6 id="palpable-content">Palpable content</h6>

  <p>As a general rule, elements whose content model allows any <span>flow content</span> or
  <span>phrasing content</span> should have at least one node in its <span
  data-x="concept-html-contents">contents</span> that is <dfn>palpable content</dfn> and that does
  not have the <code data-x="attr-hidden">hidden</code> attribute specified.</p>

  <p class="note"><span>Palpable content</span> makes an element non-empty by providing either
  some descendant non-empty <span data-x="text content">text</span>, or else something users can
  hear (<code>audio</code> elements) or view (<code>video</code> or <code>img</code> or
  <code>canvas</code> elements) or otherwise interact with (for example, interactive form
  controls).</p>

  <p>This requirement is not a hard requirement, however, as there are many cases where an element
  can be empty legitimately, for example when it is used as a placeholder which will later be filled
  in by a script, or when the element is part of a template and would on most pages be filled in but
  on some pages is not relevant.</p>

  <p>Conformance checkers are encouraged to provide a mechanism for authors to find elements that
  fail to fulfill this requirement, as an authoring aid.</p>

  <p>The following elements are palpable content:</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>a</code></li>
   <li><code>abbr</code></li>
   <li><code>address</code></li>
   <li><code>article</code></li>
   <li><code>aside</code></li>
   <li><code>audio</code> (if the <code data-x="attr-media-controls">controls</code> attribute is present)</li>
   <li><code>b</code></li>
   <li><code>bdi</code></li>
   <li><code>bdo</code></li>
   <li><code>blockquote</code></li>
   <li><code>button</code></li>
   <li><code>canvas</code></li>
   <li><code>cite</code></li>
   <li><code>code</code></li>
   <li><code>data</code></li>
   <li><code>details</code></li>
   <li><code>dfn</code></li>
   <li><code>div</code></li>
   <li><code>dl</code> (if the element's children include at least one name-value group)</li>
   <li><code>em</code></li>
   <li><code>embed</code></li>
   <li><code>fieldset</code></li>
   <li><code>figure</code></li>
   <li><code>footer</code></li>
   <li><code>form</code></li>
   <li><code>h1</code></li>
   <li><code>h2</code></li>
   <li><code>h3</code></li>
   <li><code>h4</code></li>
   <li><code>h5</code></li>
   <li><code>h6</code></li>
   <li><code>header</code></li>
   <li><code>i</code></li>
   <li><code>iframe</code></li>
   <li><code>img</code></li>
   <li><code>input</code> (if the <code data-x="attr-input-type">type</code> attribute is <em>not</em> in the <span data-x="attr-input-type-hidden">Hidden</span> state)</li>
   <li><code>ins</code></li>
   <li><code>kbd</code></li>
   <li><code>keygen</code></li>
   <li><code>label</code></li>
   <li><code>main</code></li>
   <li><code>map</code></li>
   <li><code>mark</code></li>
   <li><code>math</code></li>
   <li><code>menu</code> (if the <code data-x="attr-menu-type">type</code> attribute is in the <span data-x="toolbar state">toolbar</span> state)</li>
   <li><code>meter</code></li>
   <li><code>nav</code></li>
   <li><code>object</code></li>
   <li><code>ol</code> (if the element's children include at least one <code>li</code> element)</li>
   <li><code>output</code></li>
   <li><code>p</code></li>
   <li><code>pre</code></li>
   <li><code>progress</code></li>
   <li><code>q</code></li>
   <li><code>ruby</code></li>
   <li><code>s</code></li>
   <li><code>samp</code></li>
   <li><code>section</code></li>
   <li><code>select</code></li>
   <li><code>small</code></li>
   <li><code>span</code></li>
   <li><code>strong</code></li>
   <li><code>sub</code></li>
   <li><code>sup</code></li>
   <li><code>svg</code></li>
   <li><code>table</code></li>
   <li><code>textarea</code></li>
   <li><code>time</code></li>
   <li><code>u</code></li>
   <li><code>ul</code> (if the element's children include at least one <code>li</code> element)</li>
   <li><code>var</code></li>
   <li><code>video</code></li>
   <li><span data-x="text content">Text</span> that is not <span>inter-element whitespace</span></li>
  </ul>


  <h6 id="script-supporting-elements">Script-supporting elements</h6>

  <p><dfn>Script-supporting elements</dfn> are those that do not <span
  data-x="represents">represent</span> anything themselves (i.e. they are not rendered), but are
  used to support scripts, e.g. to provide functionality for the user.</p>

  <p>The following elements are script-supporting elements:</p>

  <!-- when updating this also update the category index -->
  <ul class="brief category-list">
   <li><code>script</code></li>
   <li><code>template</code></li>
  </ul>



  <h5 id="transparent-content-models">Transparent content models</h5>

  <p>Some elements are described as <dfn>transparent</dfn>; they have "transparent" in the
  description of their content model. The content model of a <span>transparent</span> element is
  derived from the content model of its parent element: the elements required in the part of the
  content model that is "transparent" are the same elements as required in the part of the content
  model of the parent of the transparent element in which the transparent element finds itself.</p>

  <div class="example">

   <p>For instance, an <code>ins</code> element inside a <code>ruby</code> element cannot contain an
   <code>rt</code> element, because the part of the <code>ruby</code> element's content model that
   allows <code>ins</code> elements is the part that allows <span>phrasing content</span>, and the
   <code>rt</code> element is not <span>phrasing content</span>.</p>

  </div>

<!--(as far as I can tell, there's no way to violate this requirement
     without first violating the earlier requirement)
  <p>Furthermore, when a content model includes a part that is "transparent", those parts must not
  contain content that would not be conformant if all transparent elements in the tree were
  replaced, in their parent element, by the <span data-x="concept-html-contents">contents</span> in
  the "transparent" part of their content model, retaining order.</p>

  <div class="example">

   <p>Consider the following markup fragment:</p>

   <pre>&lt;p>Hello &lt;a href="world.html">&lt;em>wonderful&lt;/em> world&lt;/a>!&lt;/p></pre>

   <p>Its DOM looks like the following:</p>

   <ul class="domTree"><li class="t1"><code>p</code><ul><li class="t3"><code>#text</code>: <span>Hello </span></li><li class="t1"><code>a</code> <span class="t2"><code class="attribute name" data-x="attr-hyperlink-href">href</code>="<code class="attribute value">world.html</code>"</span><ul><li class="t1"><code>em</code><ul><li class="t3"><code>#text</code>: <span>wonderful</span></li></ul></li><li class="t3"><code>#text</code>: <span> world</span></li></ul></li><li class="t3"><code>#text</code>: <span>!</span></li></ul></li></ul>

   <p>The content model of the <code>a</code> element is <span>transparent</span>. To see if its
   contents are conforming, therefore, the element is replaced by its contents:</p>

   <ul class="domTree"><li class="t1"><code>p</code><ul><li class="t3"><code>#text</code>: <span>Hello </span></li><li class="t1"><code>em</code><ul><li class="t3"><code>#text</code>: <span>wonderful</span></li></ul></li><li class="t3"><code>#text</code>: <span> world</span></li><li class="t3"><code>#text</code>: <span>!</span></li></ul></li></ul>

   <p>Since that is conforming, the contents of the <code>a</code> are conforming in the original
   fragment (there is no complication regarding the various parts of the <code>p</code> element's
   content model, since that element's content model has only one part).</p>

  </div>
-->

  <p class="note">In some cases, where transparent elements are nested in each other, the process
  has to be applied iteratively.</p>

  <div class="example">

   <p>Consider the following markup fragment:</p>

   <pre>&lt;p>&lt;object>&lt;param>&lt;ins>&lt;map>&lt;a href="/">Apples&lt;/a>&lt;/map>&lt;/ins>&lt;/object>&lt;/p></pre>

   <p>To check whether "Apples" is allowed inside the <code>a</code> element, the content models are
   examined. The <code>a</code> element's content model is transparent, as is the <code>map</code>
   element's, as is the <code>ins</code> element's, as is the part of the <code>object</code>
   element's in which the <code>ins</code> element is found. The <code>object</code> element is
   found in the <code>p</code> element, whose content model is <span>phrasing content</span>. Thus,
   "Apples" is allowed, as text is phrasing content.</p>

  </div>

  <p>When a transparent element has no parent, then the part of its content model that is
  "transparent" must instead be treated as accepting any <span>flow content</span>.</p>


  <h5 id="paragraphs">Paragraphs</h5>

  <p class="note">The term <span>paragraph</span> as defined in this section is used for more than
  just the definition of the <code>p</code> element. The <span>paragraph</span> concept defined here
  is used to describe how to interpret documents. The <code>p</code> element is merely one of
  several ways of marking up a <span>paragraph</span>.</p>

  <!-- note: the actual definition is below -->
  <p>A <dfn>paragraph</dfn> is typically a run of <span>phrasing content</span> that forms a block
  of text with one or more sentences that discuss a particular topic, as in typography, but can also
  be used for more general thematic grouping. For instance, an address is also a paragraph, as is a
  part of a form, a byline, or a stanza in a poem.</p>

  <div class="example">

   <p>In the following example, there are two paragraphs in a section. There is also a heading,
   which contains phrasing content that is not a paragraph. Note how the comments and
   <span>inter-element whitespace</span> do not form paragraphs.</p>

   <pre>&lt;section>
  &lt;h2>Example of paragraphs&lt;/h2>
  This is the &lt;em>first&lt;/em> paragraph in this example.
  &lt;p>This is the second.&lt;/p>
  &lt;!-- This is not a paragraph. -->
&lt;/section></pre>

  </div>

  <p>Paragraphs in <span>flow content</span> are defined relative to what the document looks like
  without the <code>a</code>, <code>ins</code>, <code>del</code>, and <code>map</code> elements
  complicating matters, since those elements, with their hybrid content models, can straddle
  paragraph boundaries, as shown in the first two examples below.</p>

  <p class="note">Generally, having elements straddle paragraph boundaries is best avoided.
  Maintaining such markup can be difficult.</p>

  <div class="example">

   <p>The following example takes the markup from the earlier example and puts <code>ins</code> and
   <code>del</code> elements around some of the markup to show that the text was changed (though in
   this case, the changes admittedly don't make much sense). Notice how this example has exactly the
   same paragraphs as the previous one, despite the <code>ins</code> and <code>del</code> elements
   &mdash; the <code>ins</code> element straddles the heading and the first paragraph, and the
   <code>del</code> element straddles the boundary between the two paragraphs.</p>

   <pre>&lt;section>
  &lt;ins>&lt;h1>Example of paragraphs&lt;/h1>
  This is the &lt;em>first&lt;/em> paragraph in&lt;/ins> this example&lt;del>.
  &lt;p>This is the second.&lt;/p>&lt;/del>
  &lt;!-- This is not a paragraph. -->
&lt;/section></pre>

  </div>

  <div class="impl">

  <p>Let <var>view</var> be a view of the DOM that replaces all <code>a</code>,
  <code>ins</code>, <code>del</code>, and <code>map</code> elements in the document with their <span
  data-x="concept-html-contents">contents</span>. Then, in <var>view</var>, for each run
  of sibling <span>phrasing content</span> nodes uninterrupted by other types of content, in an
  element that accepts content other than <span>phrasing content</span> as well as <span>phrasing
  content</span>, let <var>first</var> be the first node of the run, and let <var>last</var> be the last node of the run. For each such run that consists of at least one
  node that is neither <span>embedded content</span> nor <span>inter-element whitespace</span>, a
  paragraph exists in the original DOM from immediately before <var>first</var> to
  immediately after <var>last</var>. (Paragraphs can thus span across <code>a</code>,
  <code>ins</code>, <code>del</code>, and <code>map</code> elements.)</p>

  <p>Conformance checkers may warn authors of cases where they have paragraphs that overlap each
  other (this can happen with <code>object</code>, <code>video</code>, <code>audio</code>, and
  <code>canvas</code> elements, and indirectly through elements in other namespaces that allow HTML
  to be further embedded therein, like <code>svg</code> or <code>math</code>).</p>
  <!-- example below -->

  </div>

  <p>A <span>paragraph</span> is also formed explicitly by <code>p</code> elements.</p>

  <p class="note">The <code>p</code> element can be used to wrap individual paragraphs when there
  would otherwise not be any content other than phrasing content to separate the paragraphs from
  each other.</p>

  <div class="example">

   <p>In the following example, the link spans half of the first paragraph, all of the heading
   separating the two paragraphs, and half of the second paragraph. It straddles the paragraphs and
   the heading.</p>

   <pre>&lt;header>
 Welcome!
 &lt;a href="about.html">
  This is home of...
  &lt;h1>The Falcons!&lt;/h1>
  The Lockheed Martin multirole jet fighter aircraft!
 &lt;/a>
 This page discusses the F-16 Fighting Falcon's innermost secrets.
&lt;/header></pre>

   <p>Here is another way of marking this up, this time showing the paragraphs explicitly, and
   splitting the one link element into three:</p>

   <pre>&lt;header>
 &lt;p>Welcome! &lt;a href="about.html">This is home of...&lt;/a>&lt;/p>
 &lt;h1>&lt;a href="about.html">The Falcons!&lt;/a>&lt;/h1>
 &lt;p>&lt;a href="about.html">The Lockheed Martin multirole jet
 fighter aircraft!&lt;/a> This page discusses the F-16 Fighting
 Falcon's innermost secrets.&lt;/p>
&lt;/header></pre>
 </div>

  <div class="example">

   <!-- I don't know if there's a better way to deal with this, but if there is, let me know... -->

   <p>It is possible for paragraphs to overlap when using certain elements that define fallback
   content. For example, in the following section:</p>

   <pre>&lt;section>
 &lt;h2>My Cats&lt;/h2>
 You can play with my cat simulator.
 &lt;object data="cats.sim">
  To see the cat simulator, use one of the following links:
  &lt;ul>
   &lt;li>&lt;a href="cats.sim">Download simulator file&lt;/a>
   &lt;li>&lt;a href="http://sims.example.com/watch?v=LYds5xY4INU">Use online simulator&lt;/a>
  &lt;/ul>
  Alternatively, upgrade to the Mellblom Browser.
 &lt;/object>
 I'm quite proud of it.
&lt;/section></pre>

   <p>There are five paragraphs:</p>

   <ol class="brief">

    <li>The paragraph that says "You can play with my cat simulator. <i>object</i> I'm
    quite proud of it.", where <i>object</i> is the <code>object</code> element.</li>

    <li>The paragraph that says "To see the cat simulator, use one of the following links:".</li>

    <li>The paragraph that says "Download simulator file".</li>

    <li>The paragraph that says "Use online simulator".</li>

    <li>The paragraph that says "Alternatively, upgrade to the Mellblom Browser.".</li>

   </ol>

   <p>The first paragraph is overlapped by the other four. A user agent that supports the "cats.sim"
   resource will only show the first one, but a user agent that shows the fallback will confusingly
   show the first sentence of the first paragraph as if it was in the same paragraph as the second
   one, and will show the last paragraph as if it was at the start of the second sentence of the
   first paragraph.</p>

   <p>To avoid this confusion, explicit <code>p</code> elements can be used. For example:</p>

   <!-- My Fish -->
   <pre>&lt;section>
 &lt;h2>My Cats&lt;/h2>
 &lt;p>You can play with my cat simulator.&lt;/p>
 &lt;object data="cats.sim">
  &lt;p>To see the cat simulator, use one of the following links:&lt;/p>
  &lt;ul>
   &lt;li>&lt;a href="cats.sim">Download simulator file&lt;/a>
   &lt;li>&lt;a href="http://sims.example.com/watch?v=LYds5xY4INU">Use online simulator&lt;/a>
  &lt;/ul>
  &lt;p>Alternatively, upgrade to the Mellblom Browser.&lt;/p>
 &lt;/object>
 &lt;p>I'm quite proud of it.&lt;/p>
&lt;/section></pre>

  </div>


  <h4 id="global-attributes"><dfn>Global attributes</dfn></h4>

  <p>The following attributes are common to and may be specified on all <span>HTML
  elements</span><span class="impl"> (even those not defined in this specification)</span>:</p>

  <ul class="brief">
   <li><code data-x="attr-accesskey">accesskey</code></li>
   <li><code data-x="attr-class">class</code></li>
   <li><code data-x="attr-contenteditable">contenteditable</code></li>
   <li><code data-x="attr-contextmenu">contextmenu</code></li>
   <li><code data-x="attr-dir">dir</code></li>
   <li><code data-x="attr-draggable">draggable</code></li>
   <li><code data-x="attr-dropzone">dropzone</code></li>
   <li><code data-x="attr-hidden">hidden</code></li>
   <li><code data-x="attr-id">id</code></li>
   <li><code data-x="attr-itemid">itemid</code></li>
   <li><code data-x="attr-itemprop">itemprop</code></li>
   <li><code data-x="attr-itemref">itemref</code></li>
   <li><code data-x="attr-itemscope">itemscope</code></li>
   <li><code data-x="attr-itemtype">itemtype</code></li>
   <li><code data-x="attr-lang">lang</code></li>
   <li><code data-x="attr-spellcheck">spellcheck</code></li>
   <li><code data-x="attr-style">style</code></li>
   <li><code data-x="attr-tabindex">tabindex</code></li>
   <li><code data-x="attr-title">title</code></li>
   <li><code data-x="attr-translate">translate</code></li>
  </ul>

  <div class="impl">

  <p>These attributes are only defined by this specification as attributes for <span>HTML
  elements</span>. When this specification refers to elements having these attributes, elements from
  namespaces that are not defined as having these attributes must not be considered as being
  elements with these attributes.</p>

  <div class="example">

   <p>For example, in the following XML fragment, the "<code>bogus</code>" element does not
   have a <code data-x="attr-dir">dir</code> attribute as defined in this specification, despite
   having an attribute with the literal name "<code>dir</code>". Thus, <span>the
   directionality</span> of the inner-most <code>span</code> element is '<span
   data-x="concept-rtl">rtl</span>', inherited from the <code>div</code> element indirectly through
   the "<code>bogus</code>" element.</p>

   <pre class="bad">&lt;div xmlns="http://www.w3.org/1999/xhtml" dir="rtl">
 &lt;bogus xmlns="http://example.net/ns" dir="ltr">
  &lt;span xmlns="http://www.w3.org/1999/xhtml">
  &lt;/span>
 &lt;/bogus>
&lt;/div></pre>

  </div>

  </div>

  <hr>

  <p>To enable assistive technology products to expose a more fine-grained interface than is
  otherwise possible with HTML elements and attributes, a set of <span data-x="WAI-ARIA">annotations
  for assistive technology products</span> can be specified (the ARIA <code
  data-x="attr-aria-role">role</code> and <code data-x="attr-aria-*">aria-*</code> attributes). <a
  href="#refsARIA">\[ARIA]</a></p>

  <hr>

  <p>The following <span>event handler content attributes</span> may be specified on any <span
  data-x="HTML elements">HTML element</span>:</p>

  <ul class="brief">
   <li><code data-x="handler-onabort">onabort</code></li>
   <li><code data-x="handler-onautocomplete">onautocomplete</code></li>
   <li><code data-x="handler-onautocompleteerror">onautocompleteerror</code></li>
   <li><code data-x="handler-onblur">onblur</code>*</li>
   <li><code data-x="handler-oncancel">oncancel</code></li>
   <li><code data-x="handler-oncanplay">oncanplay</code></li>
   <li><code data-x="handler-oncanplaythrough">oncanplaythrough</code></li>
   <li><code data-x="handler-onchange">onchange</code></li>
   <li><code data-x="handler-onclick">onclick</code></li>
   <li><code data-x="handler-onclose">onclose</code></li>
   <li><code data-x="handler-oncontextmenu">oncontextmenu</code></li>
   <li><code data-x="handler-oncuechange">oncuechange</code></li>
   <li><code data-x="handler-ondblclick">ondblclick</code></li>
   <li><code data-x="handler-ondrag">ondrag</code></li>
   <li><code data-x="handler-ondragend">ondragend</code></li>
   <li><code data-x="handler-ondragenter">ondragenter</code></li>
   <li><code data-x="handler-ondragexit">ondragexit</code></li>
   <li><code data-x="handler-ondragleave">ondragleave</code></li>
   <li><code data-x="handler-ondragover">ondragover</code></li>
   <li><code data-x="handler-ondragstart">ondragstart</code></li>
   <li><code data-x="handler-ondrop">ondrop</code></li>
   <li><code data-x="handler-ondurationchange">ondurationchange</code></li>
   <li><code data-x="handler-onemptied">onemptied</code></li>
   <li><code data-x="handler-onended">onended</code></li>
   <li><code data-x="handler-onerror">onerror</code>*</li>
   <li><code data-x="handler-onfocus">onfocus</code>*</li>
   <li><code data-x="handler-oninput">oninput</code></li>
   <li><code data-x="handler-oninvalid">oninvalid</code></li>
   <li><code data-x="handler-onkeydown">onkeydown</code></li>
   <li><code data-x="handler-onkeypress">onkeypress</code></li>
   <li><code data-x="handler-onkeyup">onkeyup</code></li>
   <li><code data-x="handler-onload">onload</code>*</li>
   <li><code data-x="handler-onloadeddata">onloadeddata</code></li>
   <li><code data-x="handler-onloadedmetadata">onloadedmetadata</code></li>
   <li><code data-x="handler-onloadstart">onloadstart</code></li>
   <li><code data-x="handler-onmousedown">onmousedown</code></li>
   <li><code data-x="handler-onmouseenter">onmouseenter</code></li>
   <li><code data-x="handler-onmouseleave">onmouseleave</code></li>
   <li><code data-x="handler-onmousemove">onmousemove</code></li>
   <li><code data-x="handler-onmouseout">onmouseout</code></li>
   <li><code data-x="handler-onmouseover">onmouseover</code></li>
   <li><code data-x="handler-onmouseup">onmouseup</code></li>
   <li><code data-x="handler-onmousewheel">onmousewheel</code></li>
   <li><code data-x="handler-onpause">onpause</code></li>
   <li><code data-x="handler-onplay">onplay</code></li>
   <li><code data-x="handler-onplaying">onplaying</code></li>
   <li><code data-x="handler-onprogress">onprogress</code></li>
   <li><code data-x="handler-onratechange">onratechange</code></li>
   <li><code data-x="handler-onreset">onreset</code></li>
   <li><code data-x="handler-onresize">onresize</code>*</li>
   <li><code data-x="handler-onscroll">onscroll</code>*</li>
   <li><code data-x="handler-onseeked">onseeked</code></li>
   <li><code data-x="handler-onseeking">onseeking</code></li>
   <li><code data-x="handler-onselect">onselect</code></li>
   <li><code data-x="handler-onshow">onshow</code></li>
   <li><code data-x="handler-onsort">onsort</code></li>
   <li><code data-x="handler-onstalled">onstalled</code></li>
   <li><code data-x="handler-onsubmit">onsubmit</code></li>
   <li><code data-x="handler-onsuspend">onsuspend</code></li>
   <li><code data-x="handler-ontimeupdate">ontimeupdate</code></li>
   <li><code data-x="handler-ontoggle">ontoggle</code></li>
   <li><code data-x="handler-onvolumechange">onvolumechange</code></li>
   <li><code data-x="handler-onwaiting">onwaiting</code></li>
  </ul>

  <p class="note">The attributes marked with an asterisk have a different meaning when specified on
  <code>body</code> elements as those elements expose <span>event handlers</span> of the
  <code>Window</code> object with the same names.</p>

  <p class="note">While these attributes apply to all elements, they are not useful on all elements.
  For example, only <span data-x="media element">media elements</span> will ever receive a <code
  data-x="event-media-volumechange">volumechange</code> event fired by the user agent.</p>

  <hr>

  <p><span data-x="custom data attribute">Custom data attributes</span> (e.g. <code
 >data-foldername</code> or <code>data-msgid</code>) can be specified on any <span
  data-x="HTML elements">HTML element</span>, to store custom data specific to the page.</p>

  <hr>

  <p>In <span>HTML documents</span>, elements in the <span>HTML namespace</span> may have an <code
 >xmlns</code> attribute specified, if, and only if, it has the exact value
  "<code>http://www.w3.org/1999/xhtml</code>". This does not apply to <span>XML
  documents</span>.</p>

  <p class="note">In HTML, the <code>xmlns</code> attribute has absolutely no effect. It is
  basically a talisman. It is allowed merely to make migration to and from XHTML mildly easier. When
  parsed by an <span>HTML parser</span>, the attribute ends up in no namespace, not the
  "<code>http://www.w3.org/2000/xmlns/</code>" namespace like namespace declaration attributes in
  XML do.</p>

  <p class="note">In XML, an <code>xmlns</code> attribute is part of the namespace
  declaration mechanism, and an element cannot actually have an <code>xmlns</code>
  attribute in no namespace specified.</p>

  <hr>

  <p>The XML specification also allows the use of the <code data-x="attr-xml-space">xml:space</code>
  attribute in the <span>XML namespace</span> on any element in an <span data-x="XML documents">XML
  document</span>. This attribute has no effect on <span>HTML elements</span>, as the default
  behavior in HTML is to preserve whitespace. <a href="#refsXML">\[XML]</a></p>

  <p class="note">There is no way to serialize the <code data-x="attr-xml-space">xml:space</code>
  attribute on <span>HTML elements</span> in the <code>text/html</code> syntax.</p>


  <h5>The <dfn><code data-x="attr-id">id</code></dfn> attribute</h5>

  <p>The <code data-x="attr-id">id</code> attribute specifies its element's <span
  data-x="concept-id">unique identifier (ID)</span>. <a href="#refsDOM">\[DOM]</a></p>

  <p>The value must be unique amongst all the <span data-x="concept-id">IDs</span> in the element's
  <span>home subtree</span> and must contain at least one character. The value must not contain any
  <span data-x="space character">space characters</span>.</p>

  <!-- space characters are disallowed because space-separated lists of IDs otherwise would not be
  able to reach all valid IDs -->

  <p class="note">There are no other restrictions on what form an ID can take; in particular, IDs
  can consist of just digits, start with a digit, start with an underscore, consist of just
  punctuation, etc.</p>

  <p class="note">An element's <span data-x="concept-id">unique identifier</span> can be used for a
  variety of purposes, most notably as a way to link to specific parts of a document using fragment
  identifiers, as a way to target an element when scripting, and as a way to style a specific
  element from CSS.</p>

  <div class="impl">

  <p>Identifiers are opaque strings. Particular meanings should not be derived from the value of the
  <code data-x="attr-id">id</code> attribute.</p>

  </div>


  <h5>The <code data-x="attr-title">title</code> attribute</h5>

  <p>The <dfn><code data-x="attr-title">title</code></dfn> attribute <span>represents</span> advisory
  information for the element, such as would be appropriate for a tooltip. On a link, this could be
  the title or a description of the target resource; on an image, it could be the image credit or a
  description of the image; on a paragraph, it could be a footnote or commentary on the text; on a
  citation, it could be further information about the source; on <span>interactive content</span>,
  it could be a label for, or instructions for, use of the element; and so forth. The value is
  text.</p>

  <!-- search for title-warning if modifying this paragraph -->
  <p class="note">Relying on the <code data-x="attr-title">title</code> attribute is currently
  discouraged as many user agents do not expose the attribute in an accessible manner as required by
  this specification (e.g. requiring a pointing device such as a mouse to cause a tooltip to appear,
  which excludes keyboard-only users and touch-only users, such as anyone with a modern phone or
  tablet).</p>

  <p>If this attribute is omitted from an element, then it implies that the <code
  data-x="attr-title">title</code> attribute of the nearest ancestor <span data-x="HTML elements">HTML
  element</span> with a <code data-x="attr-title">title</code> attribute set is also relevant to this
  element. Setting the attribute overrides this, explicitly stating that the advisory information of
  any ancestors is not relevant to this element. Setting the attribute to the empty string indicates
  that the element has no advisory information.</p>

  <p>If the <code data-x="attr-title">title</code> attribute's value contains U+000A LINE FEED (LF)
  characters, the content is split into multiple lines. Each U+000A LINE FEED (LF) character
  represents a line break.</p>

  <div class="example">

   <p>Caution is advised with respect to the use of newlines in <code
   data-x="attr-title">title</code> attributes.</p>

   <p>For instance, the following snippet actually defines an abbreviation's expansion <em>with a
   line break in it</em>:</p>

   <pre class="bad">&lt;p>My logs show that there was some interest in &lt;abbr title="Hypertext
Transport Protocol">HTTP&lt;/abbr> today.&lt;/p></pre> <!-- DO NOT REWRAP THIS LINE -->

  </div>

  <p>Some elements, such as <code>link</code>, <code>abbr</code>, and <code>input</code>, define
  additional semantics for the <code data-x="attr-title">title</code> attribute beyond the semantics
  described above.</p> <!-- the other two are <code>style</code> and <code>dfn</code> -->

  <div class="impl">

  <p>The <dfn>advisory information</dfn> of an element is the value that the following algorithm
  returns, with the algorithm being aborted once a value is returned. When the algorithm returns the
  empty string, then there is no advisory information.</p>

  <ol>

   <li><p>If the element is a <code>link</code>, <code>style</code>, <code>dfn</code>,
   <code>abbr</code>, or <code>menuitem</code> element, then: if the element has a <code
  >title</code> attribute, <!-- not attr-title --> return the value of that attribute,
   otherwise, return the empty string.</p></li> <!-- note: <code>input</code> doesn't do this -->

   <li><p>Otherwise, if the element has a <code data-x="attr-title">title</code> attribute, then
   return its value.</p></li>

   <li><p>Otherwise, if the element has a parent element, then return the parent element's
   <span>advisory information</span>.</p></li>

   <li><p>Otherwise, return the empty string.</p></li>

  </ol>

  <p>User agents should inform the user when elements have <span>advisory information</span>,
  otherwise the information would not be discoverable.</p>

  <hr>

  <p>The <dfn><code data-x="dom-title">title</code></dfn> IDL attribute must <span>reflect</span> the
  <code data-x="attr-title">title</code> content attribute.</p>

  </div>



  <h5>The <code data-x="attr-lang">lang</code> and <code data-x="attr-xml-lang">xml:lang</code> attributes</h5>

  <p>The <dfn><code data-x="attr-lang">lang</code></dfn> attribute (in no namespace) specifies the
  primary language for the element's contents and for any of the element's attributes that contain
  text. Its value must be a valid BCP 47 language tag, or the empty string. Setting the attribute to
  the empty string indicates that the primary language is unknown<!-- UA conformance requirements
  for this are below -->. <a href="#refsBCP47">\[BCP47]</a></p>

  <p>The <dfn data-x="attr-xml-lang"><code>lang</code></dfn> attribute in the <span>XML
  namespace</span> is defined in XML. <a href="#refsXML">\[XML]</a></p>

  <p>If these attributes are omitted from an element, then the language of this element is the same
  as the language of its parent element, if any.</p>

  <p>The <code data-x="attr-lang">lang</code> attribute in no namespace may be used on any <span
  data-x="HTML elements">HTML element</span>.</p>

  <p>The <span data-x="attr-xml-lang"><code>lang</code> attribute in the <span>XML
  namespace</span></span> may be used on <span>HTML elements</span> in <span>XML documents</span>,
  as well as elements in other namespaces if the relevant specifications allow it (in particular,
  MathML and SVG allow <span data-x="attr-xml-lang"><code>lang</code> attributes in the
  <span>XML namespace</span></span> to be specified on their elements). If both the <code
  data-x="attr-lang">lang</code> attribute in no namespace and the <span data-x="attr-xml-lang"><code
 >lang</code> attribute in the <span>XML namespace</span></span> are specified on the same
  element, they must have exactly the same value when compared in an <span>ASCII
  case-insensitive</span> manner.</p>

  <p>Authors must not use the <span data-x="attr-xml-lang"><code>lang</code> attribute in
  the <span>XML namespace</span></span> on <span>HTML elements</span> in <span>HTML
  documents</span>. To ease migration to and from XHTML, authors may specify an attribute in no
  namespace with no prefix and with the literal localname "<code>xml:lang</code>" on
  <span>HTML elements</span> in <span>HTML documents</span>, but such attributes must only be
  specified if a <code data-x="attr-lang">lang</code> attribute in no namespace is also specified,
  and both attributes must have the same value when compared in an <span>ASCII
  case-insensitive</span> manner.</p>

  <p class="note">The attribute in no namespace with no prefix and with the literal localname "<code
 >xml:lang</code>" has no effect on language processing.</p>

  <div class="impl">

  <hr>

  <p>To determine the <dfn>language</dfn> of a node, user agents must look at the nearest ancestor
  element (including the element itself if the node is an element) that has a <span
  data-x="attr-xml-lang"><code>lang</code> attribute in the <span>XML
  namespace</span></span> set or is an <span data-x="HTML elements">HTML element</span> and has a
  <code data-x="attr-lang">lang</code> in no namespace attribute set. That attribute specifies the
  language of the node (regardless of its value).</p>

  <p>If both the <code data-x="attr-lang">lang</code> attribute in no namespace and the <span
  data-x="attr-xml-lang"><code>lang</code> attribute in the <span>XML
  namespace</span></span> are set on an element, user agents must use the <span
  data-x="attr-xml-lang"><code>lang</code> attribute in the <span>XML
  namespace</span></span>, and the <code data-x="attr-lang">lang</code> attribute in no namespace
  must be <span data-x="ignore">ignored</span> for the purposes of determining the element's
  language.</p>

  <p>If neither the node nor any of the node's ancestors, including the <span>root element</span>,
  have either attribute set, but there is a <span>pragma-set default language</span> set, then that
  is the language of the node. If there is no <span>pragma-set default language</span> set, then
  language information from a higher-level protocol (such as HTTP), if any, must be used as the
  final fallback language instead. In the absence of any such language information, and in cases
  where the higher-level protocol reports multiple languages, the language of the node is unknown,
  and the corresponding language tag is the empty string.</p>

  <p>If the resulting value is not a recognized language tag, then it must be treated as an unknown
  language having the given language tag, distinct from all other languages. For the purposes of
  round-tripping or communicating with other services that expect language tags, user agents should
  pass unknown language tags through unmodified, and tagged as being BCP 47 language tags, so that
  subsequent services do not interpret the data as another type of language description. <a
  href="#refsBCP47">\[BCP47]</a></p>

  <p class="example">Thus, for instance, an element with <code>lang="xyzzy"</code> would be
  matched by the selector <code>:lang(xyzzy)</code> (e.g. in CSS), but it would not be
  matched by <code>:lang(abcde)</code>, even though both are equally invalid. Similarly, if
  a Web browser and screen reader working in unison communicated about the language of the element,
  the browser would tell the screen reader that the language was "xyzzy", even if it knew it was
  invalid, just in case the screen reader actually supported a language with that tag after all.
  Even if the screen reader supported both BCP 47 and another syntax for encoding language names,
  and in that other syntax the string "xyzzy" was a way to denote the Belarusian language, it would
  be <em>incorrect</em> for the screen reader to then start treating text as Belarusian, because
  "xyzzy" is not how Belarusian is described in BCP 47 codes (BCP 47 uses the code "be" for
  Belarusian).</p>

  <p>If the resulting value is the empty string, then it must be interpreted as meaning that the
  language of the node is explicitly unknown.</p>

  <hr>

  <p>User agents may use the element's language to determine proper processing or rendering (e.g. in
  the selection of appropriate fonts or pronunciations, for dictionary selection, or for the user
  interfaces of form controls such as date pickers). <!--User agents must not use the element's
  language to determine text directionality. (commented out because text directionality is a
  rendering-level concern.)--></p>

  <!-- Date pickers would use the language information for determining the language of months, for
  example. They should use the page's _locale_ to figure out the format itself, not the language.
  There's currently no way to determine the page's locale except by guessing from the charset and
  language... -->

  <hr>

  <p>The <dfn><code data-x="dom-lang">lang</code></dfn> IDL attribute must <span>reflect</span> the
  <code data-x="attr-lang">lang</code> content attribute in no namespace.</p>

  </div>



  <h5 id="the-translate-attribute">The <code data-x="attr-translate">translate</code> attribute</h5>

  <!-- v2: a way to translate the declensions of the word(s), but keep the actual roots the same
           for examples, see https://www.w3.org/Bugs/Public/show_bug.cgi?id=17954 -->

  <p>The <dfn><code data-x="attr-translate">translate</code></dfn> attribute is an <span>enumerated
  attribute</span> that is used to specify whether an element's attribute values and the values of
  its <code>Text</code> node children are to be translated when the page is localized, or whether to
  leave them unchanged.</p>

  <p>The attribute's keywords are the empty string, <code>yes</code>, and <code
 >no</code>. The empty string and the <code>yes</code> keyword map to the
  <i>yes</i> state. The <code>no</code> keyword maps to the <i>no</i> state. In addition,
  there is a third state, the <i>inherit</i> state, which is the <i data-x="missing value default">missing value default</i> (and
  the <i data-x="invalid value default">invalid value default</i>).</p>

  <p>Each element (even non-HTML elements) has a <dfn>translation mode</dfn>, which is in either the
  <span>translate-enabled</span> state or the <span>no-translate</span> state. If an <span
  data-x="HTML elements">HTML element</span>'s <code data-x="attr-translate">translate</code>
  attribute is in the <i>yes</i> state, then the element's <span>translation mode</span> is in the
  <span>translate-enabled</span> state; otherwise, if the element's <code
  data-x="attr-translate">translate</code> attribute is in the <i>no</i> state, then the element's
  <span>translation mode</span> is in the <span>no-translate</span> state. Otherwise, either the
  element's <code data-x="attr-translate">translate</code> attribute is in the <i>inherit</i> state,
  or the element is not an <span data-x="HTML elements">HTML element</span> and thus does not have a
  <code data-x="attr-translate">translate</code> attribute; in either case, the element's
  <span>translation mode</span> is in the same state as its parent element's, if any, or in the
  <span>translate-enabled</span> state, if the element is a <span>root element</span>.</p>

  <p>When an element is in the <dfn>translate-enabled</dfn> state, the element's <span>translatable
  attributes</span> and the values of its <code>Text</code> node children are to be translated when
  the page is localized.</p>

  <p>When an element is in the <dfn>no-translate</dfn> state, the element's attribute values and the
  values of its <code>Text</code> node children are to be left as-is when the page is localized,
  e.g. because the element contains a person's name or a the name of a computer program.</p>

  <p>The following attributes are <dfn>translatable attributes</dfn>:</p>

  <ul class="brief">
   <li><code data-x="attr-th-abbr">abbr</code> on <code>th</code> elements</li>
   <li><code>alt</code> on <code data-x="attr-area-alt">area</code>,
                                    <code data-x="attr-img-alt">img</code>, and
                                    <code data-x="attr-input-alt">input</code> elements</li>
   <li><code data-x="attr-meta-content">content</code> on <code>meta</code> elements, if the <code data-x="attr-meta-name">name</code> attribute specifies a metadata name whose value is known to be translatable</li>
   <li><code data-x="attr-hyperlink-download">download</code> on <code>a</code> and
                                                                 <code>area</code> elements</li>
   <li><code>label</code> on <code data-x="attr-menuitem-label">menuitem</code>,
                                      <code data-x="attr-menu-label">menu</code>,
                                      <code data-x="attr-optgroup-label">optgroup</code>,
                                      <code data-x="attr-option-label">option</code>, and
                                      <code data-x="attr-track-label">track</code> elements</li>
   <li><code data-x="attr-lang">lang</code> on <span>HTML elements</span>; must be "translated" to match the language used in the translation</li>
   <li><code>placeholder</code> on <code data-x="attr-input-placeholder">input</code> and
                                            <code data-x="attr-textarea-placeholder">textarea</code> elements</li>
   <li><code data-x="attr-iframe-srcdoc">srcdoc</code> on <code>iframe</code> elements; must be parsed and recursively processed</li>
   <li><code data-x="attr-style">style</code> on <span>HTML elements</span>; must be parsed and recursively processed (e.g. for the values of 'content' properties)</li>
   <li><code data-x="attr-title">title</code> on all <span>HTML elements</span></li>
   <li><code data-x="attr-input-value">value</code> on <code>input</code> elements with a
       <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-button">Button</span> state
       or the <span data-x="attr-input-type-reset">Reset Button</span> state</li>
       <!-- <input value> on other types is excluded since we can't predict if it interferes with server-side processing -->
  </ul>

  <div class="impl">

  <hr>

  <p>The <dfn><code data-x="dom-translate">translate</code></dfn> IDL attribute must, on getting,
  return true if the element's <span>translation mode</span> is <span>translate-enabled</span>, and
  false otherwise. On setting, it must set the content attribute's value to "<code
 >yes</code>" if the new value is true, and set the content attribute's value to "<code
 >no</code>" otherwise.</p>

  </div>

 <div class="example">

   <p>In this example, everything in the document is to be translated when the page is localized,
   except the sample keyboard input and sample program output:</p>

   <pre>&lt;!DOCTYPE HTML>
&lt;html> &lt;!-- default on the root element is translate=yes -->
 &lt;head>
  &lt;title>The Bee Game&lt;/title> &lt;!-- implied translate=yes inherited from ancestors -->
 &lt;/head>
 &lt;body>
  &lt;p>The Bee Game is a text adventure game in English.&lt;/p>
  &lt;p>When the game launches, the first thing you should do is type
  &lt;kbd <strong>translate=no</strong>>eat honey&lt;/kbd>. The game will respond with:&lt;/p>
  &lt;pre>&lt;samp <strong>translate=no</strong>>Yum yum! That was some good honey!&lt;/samp>&lt;/pre>
 &lt;/body>
&lt;/html></pre>

  </div>



  <h5>The <dfn data-x="attr-xml-base"><code>xml:base</code></dfn> attribute (XML only)</h5>

  <p>The <code data-x="attr-xml-base">xml:base</code> attribute is defined in XML Base. <a
  href="#refsXMLBASE">\[XMLBASE]</a></p>

  <p>The <code data-x="attr-xml-base">xml:base</code> attribute may be used on <span>HTML
  elements</span> of <span>XML documents</span>. Authors must not use the <code
  data-x="attr-xml-base">xml:base</code> attribute on <span>HTML elements</span> in <span>HTML
  documents</span>.</p>


  <h5>The <dfn data-x="attr-dir"><code>dir</code></dfn> attribute</h5>

  <p>The <code data-x="attr-dir">dir</code> attribute specifies the element's text directionality.
  The attribute is an <span>enumerated attribute</span> with the following keywords and states:</p>

  <dl>

   <dt>The <dfn><code data-x="attr-dir-ltr">ltr</code></dfn> keyword, which maps to the <dfn data-x="attr-dir-ltr-state">ltr</dfn> state</dt>

   <dd>

    <p>Indicates that the contents of the element are explicitly directionally isolated
    left-to-right text.</p>

   </dd>

   <dt>The <dfn><code data-x="attr-dir-rtl">rtl</code></dfn> keyword, which maps to the <dfn data-x="attr-dir-rtl-state">rtl</dfn> state</dt>

   <dd>

    <p>Indicates that the contents of the element are explicitly directionally isolated
    right-to-left text.</p>

   </dd>

   <dt>The <dfn><code data-x="attr-dir-auto">auto</code></dfn> keyword, which maps to the <dfn data-x="attr-dir-auto-state">auto</dfn> state</dt>

   <dd>

    <p>Indicates that the contents of the element are explicitly directionally isolated text, but
    that the direction is to be determined programmatically using the contents of the element (as
    described below).</p>

    <p class="note">The heuristic used by this state is very crude (it just looks at the first
    character with a strong directionality, in a manner analogous to the Paragraph Level
    determination in the bidirectional algorithm). Authors are urged to only use this value as a
    last resort when the direction of the text is truly unknown and no better server-side heuristic
    can be applied. <a href="#refsBIDI">\[BIDI]</a></p>

    <p class="note">For <code>textarea</code> and <code>pre</code> elements, the heuristic is
    applied on a per-paragraph level.</p>

   </dd>

  </dl>

  <p>The attribute has no <i data-x="invalid value default">invalid value default</i> and no <i data-x="missing value default">missing value default</i>.</p>

  <hr>

  <p><dfn>The directionality</dfn> of an element (any element, not just an <span data-x="HTML
  elements">HTML element</span>) is either '<dfn data-x="concept-ltr">ltr</dfn>' or '<dfn
  data-x="concept-rtl">rtl</dfn>', and is determined as per the first appropriate set of steps from
  the following list:</p>

  <dl class="switch">


   <dt>If the element's <code data-x="attr-dir">dir</code> attribute is in the <span
   data-x="attr-dir-ltr-state">ltr</span> state</dt>

   <dt>If the element is a <span>root element</span> and the <code data-x="attr-dir">dir</code>
   attribute is not in a defined state (i.e. it is not present or has an invalid value)</dt>

   <dt>If the element is an <code>input</code> element whose <code
   data-x="attr-input-type">type</code> attribute is in the <span
   data-x="attr-input-type-tel">Telephone</span> state, and the <code data-x="attr-dir">dir</code>
   attribute is not in a defined state (i.e. it is not present or has an invalid value)</dt>

   <dd><p><span>The directionality</span> of the element is '<span
   data-x="concept-ltr">ltr</span>'.</p></dd>


   <dt>If the element's <code data-x="attr-dir">dir</code> attribute is in the <span
   data-x="attr-dir-rtl-state">rtl</span> state</dt>

   <dd><p><span>The directionality</span> of the element is '<span
   data-x="concept-rtl">rtl</span>'.</p></dd>

   <dt>If the element is an <code>input</code> element whose <code
   data-x="attr-input-type">type</code> attribute is in the <span
   data-x="attr-input-type-text">Text</span>, <span data-x="attr-input-type-search">Search</span>,
   <span data-x="attr-input-type-tel">Telephone</span>, <span
   data-x="attr-input-type-url">URL</span>, or <span data-x="attr-input-type-email">E-mail</span>
   state, and the <code data-x="attr-dir">dir</code> attribute is in the <span
   data-x="attr-dir-auto-state">auto</span> state</dt>

   <dt>If the element is a <code>textarea</code> element and the <code data-x="attr-dir">dir</code>
   attribute is in the <span data-x="attr-dir-auto-state">auto</span> state</dt>

   <dd>

    <p>If the element's <span data-x="concept-fe-value">value</span> contains a character of
    bidirectional character type AL or R, and there is no character of bidirectional character type
    L anywhere before it in the element's <span data-x="concept-fe-value">value</span>, then
    <span>the directionality</span> of the element is '<span data-x="concept-rtl">rtl</span>'. <a
    href="#refsBIDI">\[BIDI]</a></p>

    <p>Otherwise, if the element's <span data-x="concept-fe-value">value</span> is not the empty
    string, or if the element is a <span>root element</span>, <span>the directionality</span> of the
    element is '<span data-x="concept-ltr">ltr</span>'.</p>

    <p>Otherwise, <span>the directionality</span> of the element is the same as the element's parent
    element's <span data-x="the directionality">directionality</span>.</p>

   </dd>



   <dt>If the element's <code data-x="attr-dir">dir</code> attribute is in the <span
   data-x="attr-dir-auto-state">auto</span> state</dt>

   <dt>If the element is a <code>bdi</code> element and the <code data-x="attr-dir">dir</code>
   attribute is not in a defined state (i.e. it is not present or has an invalid value)</dt>

   <dd>

    <p>Find the first character in <span>tree order</span> that matches the following criteria:</p>

    <ul>

     <li><p>The character is from a <code>Text</code> node that is a descendant of the element whose
     <span data-x="the directionality">directionality</span> is being determined.</p></li>

     <li><p>The character is of bidirectional character type L, AL, or R. <a
     href="#refsBIDI">\[BIDI]</a></li>

     <li>

      <p>The character is not in a <code>Text</code> node that has an ancestor element that is a
      descendant of the element whose <span data-x="the directionality">directionality</span> is
      being determined and that is either:</p>

      <ul class="brief">
       <li>A <code>bdi</code> element.
       <li>A <code>script</code> element.
       <li>A <code>style</code> element.
       <li>A <code>textarea</code> element.
       <li>An element with a <code data-x="attr-dir">dir</code> attribute in a defined state.
      </ul>

     </li>

    </ul>

    <p>If such a character is found and it is of bidirectional character type AL or R, <span>the
    directionality</span> of the element is '<span data-x="concept-rtl">rtl</span>'.</p>

    <p>If such a character is found and it is of bidirectional character type L, <span>the
    directionality</span> of the element is '<span data-x="concept-ltr">ltr</span>'.</p>

    <p>Otherwise, if the element is a <span>root element</span>, <span>the directionality</span> of
    the element is '<span data-x="concept-ltr">ltr</span>'.</p>

    <p>Otherwise, <span>the directionality</span> of the element the same as the element's parent
    element's <span data-x="the directionality">directionality</span>.</p>

   </dd>


   <dt>If the element has a parent element and the <code data-x="attr-dir">dir</code> attribute is
   not in a defined state (i.e. it is not present or has an invalid value)</dt>

   <dd><p><span>The directionality</span> of the element is the same as the element's parent
   element's <span data-x="the directionality">directionality</span>.</p></dd>


  </dl>

  <p class="note">Since the <code data-x="attr-dir">dir</code> attribute is only defined for
  <span>HTML elements</span>, it cannot be present on elements from other namespaces. Thus, elements
  from other namespaces always just inherit their <span data-x="the
  directionality">directionality</span> from their parent element, or, if they don't have one,
  default to '<span data-x="concept-ltr">ltr</span>'.</p>

  <div class="impl">

  <p class="note">This attribute <a href="#bidireq">has rendering requirements involving the
  bidirectional algorithm</a>.</p>

  </div>

  <hr>

  <p>The <dfn data-x="directionality of the attribute">directionality of an attribute</dfn> of an
  <span data-x="HTML elements">HTML element</span>, which is used when the text of that attribute is
  to be included in the rendering in some manner, is determined as per the first appropriate set of
  steps from the following list:</p>

  <dl class="switch">

   <dt>If the attribute is a <span>directionality-capable attribute</span> and the element's <code
   data-x="attr-dir">dir</code> attribute is in the <span data-x="attr-dir-auto-state">auto</span>
   state</dt>

   <dd>

    <p>Find the first character (in logical order) of the attribute's value that is of bidirectional
    character type L, AL, or R. <a href="#refsBIDI">\[BIDI]</a></p>

    <p>If such a character is found and it is of bidirectional character type AL or R, the
    <span>directionality of the attribute</span> is '<span data-x="concept-rtl">rtl</span>'.</p>

    <p>Otherwise, the <span>directionality of the attribute</span> is '<span
    data-x="concept-ltr">ltr</span>'.</p>

   </dd>

   <dt>Otherwise</dt>

   <dd>The <span>directionality of the attribute</span> is the same as <span data-x="the
   directionality">the element's directionality</span>.</dd>

  </dl>

  <p>The following attributes are <dfn data-x="directionality-capable
  attribute">directionality-capable attributes</dfn>:</p>

  <ul class="brief">
   <li><code data-x="attr-th-abbr">abbr</code> on <code>th</code> elements</li>
   <li><code>alt</code> on <code data-x="attr-area-alt">area</code>,
                                    <code data-x="attr-img-alt">img</code>, and
                                    <code data-x="attr-input-alt">input</code> elements</li>
   <li><code data-x="attr-meta-content">content</code> on <code>meta</code> elements, if the <code data-x="attr-meta-name">name</code> attribute specifies a metadata name whose value is primarily intended to be human-readable rather than machine-readable</li>
   <li><code>label</code> on <code data-x="attr-menuitem-label">menuitem</code>,
                                      <code data-x="attr-menu-label">menu</code>,
                                      <code data-x="attr-optgroup-label">optgroup</code>,
                                      <code data-x="attr-option-label">option</code>, and
                                      <code data-x="attr-track-label">track</code> elements</li>
   <li><code>placeholder</code> on <code data-x="attr-input-placeholder">input</code> and
                                            <code data-x="attr-textarea-placeholder">textarea</code> elements</li>
   <li><code data-x="attr-title">title</code> on all <span>HTML elements</span></li>
  </ul>

  <hr>

  <dl class="domintro">

   <dt><var>document</var> . <code subdfn data-x="dom-dir">dir</code> [ = <var>value</var> ]</dt>
   <dd>
    <p>Returns <span>the <code>html</code> element</span>'s <code data-x="attr-dir">dir</code> attribute's value, if any.</p>
    <p>Can be set, to either "<code>ltr</code>", "<code>rtl</code>", or "<code>auto</code>" to replace <span>the <code>html</code> element</span>'s <code data-x="attr-dir">dir</code> attribute's value.</p>
    <p>If there is no <span data-x="the html element"><code>html</code> element</span>, returns the empty string and ignores new values.</p>
   </dd>

  </dl>

  <div class="impl">

  <p>The <dfn><code data-x="dom-dir">dir</code></dfn> IDL attribute on an element must
  <span>reflect</span> the <code data-x="attr-dir">dir</code> content attribute of that element,
  <span>limited to only known values</span>.</p>

  <p>The <dfn><code data-x="dom-document-dir">dir</code></dfn> IDL attribute on <code>Document</code>
  objects must <span>reflect</span> the <code data-x="attr-dir">dir</code> content attribute of
  <span>the <code>html</code> element</span>, if any, <span>limited to only known values</span>. If
  there is no such element, then the attribute must return the empty string and do nothing on
  setting.</p>

  </div>

  <p class="note">Authors are strongly encouraged to use the <code data-x="attr-dir">dir</code>
  attribute to indicate text direction rather than using CSS, since that way their documents will
  continue to render correctly even in the absence of CSS (e.g. as interpreted by search
  engines).</p>

  <div class="example">

   <p>This markup fragment is of an IM conversation.</p>

   <pre>&lt;p dir=auto class="u1">&lt;b>&lt;bdi>Student&lt;/bdi>:&lt;/b> How do you write "What's your name?" in Arabic?&lt;/p>
&lt;p dir=auto class="u2">&lt;b>&lt;bdi>Teacher&lt;/bdi>:&lt;/b> &#x645;&#x627; &#x627;&#x633;&#x645;&#x643;&#x61f;&lt;/p>
&lt;p dir=auto class="u1">&lt;b>&lt;bdi>Student&lt;/bdi>:&lt;/b> Thanks.&lt;/p>
&lt;p dir=auto class="u2">&lt;b>&lt;bdi>Teacher&lt;/bdi>:&lt;/b> That's written "&#x634;&#x643;&#x631;&#x64b;&#x627;".&lt;/p>
&lt;p dir=auto class="u2">&lt;b>&lt;bdi>Teacher&lt;/bdi>:&lt;/b> Do you know how to write "Please"?&lt;/p>
&lt;p dir=auto class="u1">&lt;b>&lt;bdi>Student&lt;/bdi>:&lt;/b> "&#x645;&#x646; &#x641;&#x636;&#x644;&#x643;", right?&lt;/p></pre>

<!--
<!DOCTYPE html>
<style>
 div { border: groove #FFFF99; padding: 0.25em; width: 22em; background: #FFFFEE; color: black; }
 p { margin: 0.25em 0; font: 1em/1 InaiMathi; color: purple; }
 .u1 { color: teal; }
</style>
<div>
<p dir=ltr class="u1"><b><bdi>Student</bdi>:</b> How do you write "What's your name?" in Arabic?</p>
<p dir=rtl class="u2"><b><bdi>Teacher</bdi>:</b> &#x645;&#x627; &#x627;&#x633;&#x645;&#x643;&#x61f;</p>
<p dir=ltr class="u1"><b><bdi>Student</bdi>:</b> Thanks.</p>
<p dir=ltr class="u2"><b><bdi>Teacher</bdi>:</b> That's written "&#x634;&#x643;&#x631;&#x64b;&#x627;".</p>
<p dir=ltr class="u2"><b><bdi>Teacher</bdi>:</b> Do you know how to write "Please"?</p>
<p dir=rtl class="u1"><b><bdi>Student</bdi>:</b> "&#x645;&#x646; &#x641;&#x636;&#x644;&#x643;", right?</p>
-->

   <p>Given a suitable style sheet and the default alignment styles for the <code>p</code> element,
   namely to align the text to the <i>start edge</i> of the paragraph, the resulting rendering could
   be as follows:</p>

   <p><img src="images/im.png" alt="Each paragraph rendered as a separate block, with the paragraphs left-aligned except the second paragraph and the last one, which would  be right aligned, with the usernames ('Student' and 'Teacher' in this example) flush right, with a colon to their left, and the text first to the left of that." width=366 height=157></p>

   <p>As noted earlier, the <code data-x="attr-dir-auto">auto</code> value is not a panacea. The
   final paragraph in this example is misinterpreted as being right-to-left text, since it begins
   with an Arabic character, which causes the "right?" to be to the left of the Arabic text.</p>

  </div>



  <h5 id="classes">The <dfn><code data-x="attr-class">class</code></dfn> attribute</h5>

  <p>Every <span data-x="HTML elements">HTML element</span> may have a <code
  data-x="attr-class">class</code> attribute specified.</p>

  <p>The attribute, if specified, must have a value that is a <span>set of space-separated
  tokens</span> representing the various classes that the element belongs to.</p>

  <div class="impl">

  <p>The classes that an <span data-x="HTML elements">HTML element</span> has assigned to it consists
  of all the classes returned when the value of the <code data-x="attr-class">class</code> attribute
  is <span data-x="split a string on spaces">split on spaces</span>. (Duplicates are ignored.)</p>

  </div>

  <p class="note">Assigning classes to an element affects class matching in selectors in CSS, the
  <code data-x="dom-document-getElementsByClassName">getElementsByClassName()</code> method in the
  DOM, and other such features.</p>

  <p>There are no additional restrictions on the tokens authors can use in the <code
  data-x="attr-class">class</code> attribute, but authors are encouraged to use values that describe
  the nature of the content, rather than values that describe the desired presentation of the
  content.</p>

  <div class="impl">

  <hr>

  <p class="note">The <dfn><code data-x="dom-className">className</code></dfn> and <dfn><code data-x="dom-classList">classList</code></dfn> IDL attributes, defined in the DOM
  specification, <span>reflect</span> the <code data-x="attr-class">class</code> content attribute.
  <a href="#refsDOM">\[DOM]</a></p>

  </div>



  <h5>The <dfn><code data-x="attr-style">style</code></dfn> attribute</h5>

  <p>All <span>HTML elements</span> may have the <code data-x="attr-style">style</code> content
  attribute set. This is a <span>CSS styling attribute</span> as defined by the CSS Styling
  Attribute Syntax specification. <a href="#refsCSSATTR">\[CSSATTR]</a></p>

  <div class="impl">

  <p>In user agents that support CSS, the attribute's value must be parsed when the attribute is
  added or has its value changed<!-- so dynamic changes to the base URL don't affect the CSS -->,
  according to the rules given for <span data-x="CSS styling attribute">CSS styling
  attributes</span>. <a href="#refsCSSATTR">\[CSSATTR]</a></p>

  </div>

  <p>Documents that use <code data-x="attr-style">style</code> attributes on any of their elements
  must still be comprehensible and usable if those attributes were removed.</p>

  <p class="note">In particular, using the <code data-x="attr-style">style</code> attribute to hide
  and show content, or to convey meaning that is otherwise not included in the document, is
  non-conforming. (To hide and show content, use the <code data-x="attr-hidden">hidden</code>
  attribute.)</p>

  <hr>

  <dl class="domintro">

   <dt><var>element</var> . <code subdfn data-x="dom-style">style</code></dt>
   <dd>
    <p>Returns a <code>CSSStyleDeclaration</code> object for the element's <code data-x="attr-style">style</code> attribute.</p>
   </dd>

  </dl>

  <div class="impl">

  <p>The <dfn data-x="dom-style"><code>style</code></dfn> IDL attribute is defined in the CSS Object
  Model (CSSOM) specification. <a href="#refsCSSOM">\[CSSOM]</a></p>

  </div>

  <div class="example">

   <p>In the following example, the words that refer to colors are marked up using the
   <code>span</code> element and the <code data-x="attr-style">style</code> attribute to make those
   words show up in the relevant colors in visual media.</p>

   <pre>&lt;p>My sweat suit is &lt;span style="color: green; background:
transparent">green&lt;/span> and my eyes are &lt;span style="color: blue;
background: transparent">blue&lt;/span>.&lt;/p></pre>

  </div>



  <h5><dfn>Embedding custom non-visible data</dfn> with the <code data-x="attr-data-*">data-*</code> attributes</h5>

  <p>A <dfn>custom data attribute</dfn> is an attribute in no namespace whose name starts with the
  string "<dfn><code data-x="attr-data-*">data-</code></dfn>", has at least one character after the
  hyphen, is <span>XML-compatible</span>, and contains no <span>uppercase ASCII letters</span>.</p>

  <p class="note">All attribute names on <span>HTML elements</span> in <span>HTML documents</span>
  get ASCII-lowercased automatically, so the restriction on ASCII uppercase letters doesn't affect
  such documents.</p>

  <p><span data-x="custom data attribute">Custom data attributes</span> are intended to store custom
  data private to the page or application, for which there are no more appropriate attributes or
  elements.</p>

  <p>These attributes are not intended for use by software that is not known to the administrators
  of the site that uses the attributes. For generic extensions that are to be used by multiple
  independent tools, either this specification should be extended to provide the feature explicitly,
  or a technology like <span>microdata</span> should be used (with a standardized vocabulary).</p>

  <div class="example">

   <p>For instance, a site about music could annotate list items representing tracks in an album
   with custom data attributes containing the length of each track. This information could then be
   used by the site itself to allow the user to sort the list by track length, or to filter the list
   for tracks of certain lengths.</p>

   <pre>&lt;ol>
 &lt;li data-length="2m11s">Beyond The Sea&lt;/li>
 ...
&lt;/ol></pre>

   <p>It would be inappropriate, however, for the user to use generic software not associated with
   that music site to search for tracks of a certain length by looking at this data.</p>

   <p>This is because these attributes are intended for use by the site's own scripts, and are not a
   generic extension mechanism for publicly-usable metadata.</p>

  </div>

  <div class="example">

   <p>Similarly, a page author could write markup that provides information for a translation tool
   that they are intending to use:</p>

   <pre>&lt;p>The third &lt;span data-mytrans-de="Anspruch">claim&lt;/span> covers the case of &lt;span
translate="no">HTML&lt;/span> markup.&lt;/p></pre>

   <p>In this example, the "<code>data-mytrans-de</code>" attribute gives specific text
   for the MyTrans product to use when translating the phrase "claim" to German. However, the
   standard <code data-x="attr-translate">translate</code> attribute is used to tell it that in all
   languages, "HTML" is to remain unchanged. When a standard attribute is available, there is no
   need for a <span>custom data attribute</span> to be used.</p>

  </div>

  <p>Every <span data-x="HTML elements">HTML element</span> may have any number of <span
  data-x="custom data attribute">custom data attributes</span> specified, with any value.</p>

  <hr>

  <dl class="domintro">

   <dt><var>element</var> . <code subdfn data-x="dom-dataset">dataset</code></dt>
   <dd>

    <p>Returns a <code>DOMStringMap</code> object for the element's <code
    data-x="attr-data-*">data-*</code> attributes.</p>

    <p>Hyphenated names become camel-cased. For example, <code>data-foo-bar=""</code>
    becomes <code>element.dataset.fooBar</code>.</p>

   </dd>

  </dl>

  <div class="impl">

  <p>The <dfn><code data-x="dom-dataset">dataset</code></dfn> IDL attribute provides convenient
  accessors for all the <code data-x="attr-data-*">data-*</code> attributes on an element. On
  getting, the <code data-x="dom-dataset">dataset</code> IDL attribute must return a
  <code>DOMStringMap</code> object, associated with the following algorithms, which expose these
  attributes on their element:</p>

  <dl>

   <dt>The algorithm for getting the list of name-value pairs</dt>

   <dd>
    <ol>

     <li>Let <var>list</var> be an empty list of name-value
     pairs.</li>

     <li>For each content attribute on the element whose first five characters are the string "<code
    >data-</code>" and whose remaining characters (if any) do not include any
     <span>uppercase ASCII letters</span>, in the order that those attributes are listed in the
     element's <span>attribute list</span>, add a name-value pair to <var>list</var> whose
     name is the attribute's name with the first five characters removed and whose value is the
     attribute's value.</li>

     <li>For each name in <var>list</var>, for each U+002D HYPHEN-MINUS character (-) in the
     name that is followed by a <span data-x="lowercase ASCII letters">lowercase ASCII letter</span>,
     remove the U+002D HYPHEN-MINUS character (-) and replace the character that followed it by the
     same character <span>converted to ASCII uppercase</span>.</li>

     <li>Return <var>list</var>.</li>

    </ol>
   </dd>

   <dt>The algorithm for setting names to certain values</dt>

   <dd>
    <ol>

     <li>Let <var>name</var> be the name passed to the algorithm.</li>

     <li>Let <var>value</var> be the value passed to the algorithm.</li>

     <li>If <var>name</var> contains a U+002D HYPHEN-MINUS character (-) followed by a
     <span data-x="lowercase ASCII letters">lowercase ASCII letter</span>, throw a
     <code>SyntaxError</code> exception and abort these steps.</li>

     <li>For each <span data-x="uppercase ASCII letters">uppercase ASCII letter</span> in <var>name</var>, insert a U+002D HYPHEN-MINUS character (-) before the character and
     replace the character with the same character <span>converted to ASCII lowercase</span>.</li>

     <li>Insert the string <code>data-</code> at the front of <var>name</var>.</li>

     <li>Set the value of the attribute with the name <var>name</var>, to the value <var>value</var>, replacing any previous value if the attribute already existed. If <code
    >setAttribute()</code> would have thrown an exception when setting an attribute with
     the name <var>name</var>, then this must throw the same exception.</li>

    </ol>
   </dd>

   <dt>The algorithm for deleting names</dt>

   <dd>
    <ol>

     <li>Let <var>name</var> be the name passed to the algorithm.</li>

<!--(can't happen while the DOMStringMap deleter has no name)
     <li>If <var>name</var> contains a U+002D HYPHEN-MINUS character (-) followed by a
     <span data-x="lowercase ASCII letters">lowercase ASCII letter</span>, throw a
     <code>SyntaxError</code> exception and abort these steps.</li>
-->

     <li>For each <span data-x="uppercase ASCII letters">uppercase ASCII letter</span> in <var>name</var>, insert a U+002D HYPHEN-MINUS character (-) before the character and
     replace the character with the same character <span>converted to ASCII lowercase</span>.</li>

     <li>Insert the string <code>data-</code> at the front of <var>name</var>.</li>

     <li>Remove the attribute with the name <var>name</var>, if such an attribute exists.
     Do nothing otherwise.</li>

    </ol>

    <p class="note">This algorithm will only get invoked by the Web IDL specification for names that
    are given by the earlier algorithm for getting the list of name-value pairs. <a
    href="#refsWEBIDL">\[WEBIDL]</a></p>

   </dd>

  </dl>

  </div>

  <div class="example">

   <p>If a Web page wanted an element to represent a space ship, e.g. as part of a game, it would
   have to use the <code data-x="attr-class">class</code> attribute along with <code
   data-x="attr-data-*">data-*</code> attributes:</p>

   <pre>&lt;div class="spaceship" data-ship-id="92432"
     data-weapons="laser 2" data-shields="50%"
     data-<!---->x="30" data-y="10" data-z="90">
 &lt;button class="fire"
         onclick="spaceships[this.parentNode.dataset.shipId].fire()">
  Fire
 &lt;/button>
&lt;/div></pre>

   <p>Notice how the hyphenated attribute name becomes camel-cased in the API.</p>

  </div>

  <p>Authors should carefully design such extensions so that when the attributes are ignored and any
  associated CSS dropped, the page is still usable.</p>

  <div class="impl">

  <p>User agents must not derive any implementation behavior from these attributes or values.
  Specifications intended for user agents must not define these attributes to have any meaningful
  values.</p>

  </div>

  <p>JavaScript libraries may use the <span data-x="custom data attribute">custom data
  attributes</span>, as they are considered to be part of the page on which they are used. Authors
  of libraries that are reused by many authors are encouraged to include their name in the attribute
  names, to reduce the risk of clashes. Where it makes sense, library authors are also encouraged to
  make the exact name used in the attribute names customizable, so that libraries whose authors
  unknowingly picked the same name can be used on the same page, and so that multiple versions of a
  particular library can be used on the same page even when those versions are not mutually
  compatible.</p>

  <div class="example">

   <p>For example, a library called "DoQuery" could use attribute names like <code
  >data-doquery-range</code>, and a library called "jJo" could use attributes names like
   <code>data-jjo-range</code>. The jJo library could also provide an API to set which
   prefix to use (e.g. <code>J.setDataPrefix('j2')</code>, making the attributes have names
   like <code>data-j2-range</code>).</p>

  </div>


  <h4 id="requirements-relating-to-the-bidirectional-algorithm">Requirements relating to the bidirectional algorithm</h4>

  <!--END dev-html--><h5 id="authoring-conformance-criteria-for-bidirectional-algorithm-formatting-characters">Authoring conformance criteria for bidirectional-algorithm formatting characters</h5><!--START dev-html-->

  <p><span>Text content</span> in <span>HTML elements</span> with <code>Text</code> nodes in their
  <span data-x="concept-html-contents">contents</span>, and text in attributes of <span>HTML
  elements</span> that allow free-form text, may contain characters in the ranges U+202A to U+202E
  and U+2066 to U+2069 (the bidirectional-algorithm formatting characters). However, the use of
  these characters is restricted so that any embedding or overrides generated by these characters do
  not start and end with different parent elements, and so that all such embeddings and overrides
  are explicitly terminated by a U+202C POP DIRECTIONAL FORMATTING character. This helps reduce
  incidences of text being reused in a manner that has unforeseen effects on the bidirectional
  algorithm. <a href="#refsBIDI">\[BIDI]</a></p>

  <p>The aforementioned restrictions are defined by specifying that certain parts of documents form
  <span>bidirectional-algorithm formatting character ranges</span>, and then imposing a requirement
  on such ranges.</p>

  <p>The strings resulting from applying the following algorithm to an <span data-x="HTML
  elements">HTML element</span> <var>element</var> are <span>bidirectional-algorithm
  formatting character ranges</span>:</p>

  <ol>

   <li><p>Let <var>output</var> be an empty list of strings.</p></li>

   <li><p>Let <var>string</var> be an empty string.</p></li>

   <li><p>Let <var>node</var> be the first child node of <var>element</var>, if
   any, or null otherwise.</p></li>

   <!-- while node != null do -->
   <li><p><i>Loop</i>: If <var>node</var> is null, jump to the step labeled
   <i>end</i>.</p></li>

   <li>

    <p>Process <var>node</var> according to the first matching step from the following
    list:</p>

    <dl class="switch">

     <dt>If <var>node</var> is a <code>Text</code> node</dt>

     <dd><p>Append the text data of <var>node</var> to <var>string</var>.</p></dd>


     <dt>If <var>node</var> is a <code>br</code> element</dt>
     <dt>If <var>node</var> is an <span data-x="HTML elements">HTML element</span> that is
     <span>flow content</span> but that is not also <span>phrasing content</span></dt>

     <dd><p>If <var>string</var> is not the empty string, push <var>string</var>
     onto <var>output</var>, and let <var>string</var> be empty string.</p></dd>


     <dt>Otherwise</dt>

     <dd>Do nothing.</dd>

    </dl>

   </li>

   <li><p>Let <var>node</var> be <var>node</var>'s next sibling, if any, or null
   otherwise.</p></li>

   <li><p>Jump to the step labeled <i>loop</i>.</p></li>
   <!-- end while -->

   <li><p><i>End</i>: If <var>string</var> is not the empty string, push <var>string</var> onto <var>output</var>.</p></li>

   <li><p>Return <var>output</var> as the <span>bidirectional-algorithm formatting
   character ranges</span>.</p></li>

  </ol>

  <p>The value of a namespace-less attribute of an <span data-x="HTML elements">HTML element</span>
  is a <span data-x="bidirectional-algorithm formatting character ranges">bidirectional-algorithm
  formatting character range</span>.</p>

<!--(this is unnecessarily pedantic)
  <p>The text data of a comment node is a <span data-x="bidirectional-algorithm formatting character
  ranges">bidirectional-algorithm formatting character range</span>.</p>
-->

  <p>Any strings that, as described above, are <dfn>bidirectional-algorithm formatting character
  ranges</dfn> must match the <code>string</code> production in the following ABNF, the
  character set for which is Unicode. <a href="#refsABNF">\[ABNF]</a></p>

  <pre>string        = *( plaintext ( embedding / override / isolation ) ) plaintext
embedding     = ( lre / rle ) string pdf
override      = ( lro / rlo ) string pdf
isolation     = ( lri / rli / fsi ) string pdi
lre           = %x202A ; U+202A LEFT-TO-RIGHT EMBEDDING
rle           = %x202B ; U+202B RIGHT-TO-LEFT EMBEDDING
lro           = %x202D ; U+202D LEFT-TO-RIGHT OVERRIDE
rlo           = %x202E ; U+202E RIGHT-TO-LEFT OVERRIDE
pdf           = %x202C ; U+202C POP DIRECTIONAL FORMATTING
lri           = %x2066 ; U+2066 LEFT-TO-RIGHT ISOLATE
rli           = %x2067 ; U+2067 RIGHT-TO-LEFT ISOLATE
fsi           = %x2068 ; U+2068 FIRST STRONG ISOLATE
pdi           = %x2069 ; U+2069 POP DIRECTIONAL ISOLATE
plaintext     = *( %x0000-2029 / %x202F-2065 / %x206A-10FFFF )
                ; any string with no bidirectional-algorithm formatting characters</pre>

  <p class="note">While the U+2069 POP DIRECTIONAL ISOLATE character implicitly also ends open
  embeddings and overrides, text that relies on this implicit scope closure is not conforming to
  this specification. All strings of embeddings, overrides, and isolations need to be explicitly
  terminated to conform to this section's requirements.</p>

  <p class="note">Authors are encouraged to use the <code data-x="attr-dir">dir</code> attribute, the
  <code>bdo</code> element, and the <code>bdi</code> element, rather than maintaining the
  bidirectional-algorithm formatting characters manually. The bidirectional-algorithm formatting
  characters interact poorly with CSS.</p>


  <div class="impl">

  <h5 id="user-agent-conformance-criteria">User agent conformance criteria</h5>

  <p>User agents must implement the Unicode bidirectional algorithm to determine the proper ordering
  of characters when rendering documents and parts of documents. <a href="#refsBIDI">\[BIDI]</a></p>

  <p>The mapping of HTML to the Unicode bidirectional algorithm must be done in one of three ways.
  Either the user agent must implement CSS, including in particular the CSS 'unicode-bidi',
  'direction', and 'content' properties, and must have, in its user agent style sheet, the rules
  using those properties given in this specification's <a href="#rendering">rendering</a> section,
  or, alternatively, the user agent must act as if it implemented just the aforementioned properties
  and had a user agent style sheet that included all the aforementioned rules, but without letting
  style sheets specified in documents override them, or, alternatively, the user agent must
  implement another styling language with equivalent semantics. <a href="#refsCSSWM">\[CSSWM]</a> <a
  href="#refsCSSGC">\[CSSGC]</a></p>

  <p id="bidireq">The following elements and attributes have requirements defined by the <a
  href="#rendering">rendering</a> section that, due to the requirements in this section, are
  requirements on all user agents (not just those that <a href="#renderingUA">support the suggested
  default rendering</a>):</p>

  <ul class="brief">
   <li><code data-x="attr-dir">dir</code> attribute</li>
   <li><code>bdi</code> element</li>
   <li><code>bdo</code> element</li>
   <li><code>br</code> element</li>
   <li><code>pre</code> element</li>
   <li><code>textarea</code> element</li>
   <li><code>wbr</code> element</li>
  </ul>

  </div>


  <h4 id="wai-aria"><dfn>WAI-ARIA</dfn></h4>

  <!--FORK-->
  <div class="note">
    <p>Authors are encouraged to make use of the following documents for guidance on using ARIA in
    HTML beyond that which is provided in this section:</p>

    <ul>
      <li><a href="http://rawgithub.com/w3c/aria-in-html/master/index.html">Using WAI-ARIA in HTML</a> - A practical guide for developers on how to to add accessibility information to HTML elements using
      the Accessible Rich Internet Applications specification <a href="#refsARIA">\[ARIA]</a>.
      In particular the
      <a href="http://rawgithub.com/w3c/aria-in-html/master/index.html#recommendations-table">Recommendations Table</a>
      provides a complete reference for authors as to which ARIA roles, states and properties
      are appropriate to use on each HTML element.</li>

      <li><a href="http://www.w3.org/WAI/PF/aria-practices/">WAI-ARIA 1.0 Authoring Practices</a> - An
      author's guide to understanding and implementing Accessible Rich Internet Applications.</li>
    </ul>
  </div>

  <p class="auth">Authors may use the ARIA <code data-x="attr-aria-role">role</code> and <code
  data-x="attr-aria-*">aria-*</code> attributes on <span>HTML elements</span>, in accordance with the
  requirements described in the ARIA specifications, except where these conflict with the
  <span>strong native semantics</span>
<!--END w3c-html--><!--START FORK--><!--bug 11557-->
  or are equal to the <span>default implicit ARIA semantics</span>
<!--START w3c-html--><!--END FORK--><!--bug 11557-->
  described below. These exceptions are intended to prevent authors from making
  assistive technology products report nonsensical states that do not represent the actual state of
  the document. <a href="#refsARIA">\[ARIA]</a></p>


<!--END w3c-html--><!--START FORK--><!--bug 11557-->
  <p class="auth">Authors must not set the ARIA <code data-x="attr-aria-role">role</code> and <code
  data-x="attr-aria-*">aria-*</code> attributes in a manner that conflicts with the semantics
  described in the following table, except that the <code
  data-x="attr-aria-role-presentation">presentation</code> role may always be used. Authors must not
  set the ARIA <code data-x="attr-aria-role">role</code> and <code
  data-x="attr-aria-*">aria-*</code> attributes to values that match the <span>default implicit ARIA
  semantics</span> defined in the following two tables.</p>
<!--START w3c-html--><!--END FORK--><!--bug 11557-->

  <div class="impl">

  <p>User agents must implement ARIA semantics on all <span>HTML elements</span>, as defined in the
  ARIA specifications. The <span>default implicit ARIA semantics</span> defined below must be
  recognized by implementations for the purposes of ARIA processing. <a
  href="#refsARIAIMPL">\[ARIAIMPL]</a></p>

  <p class="note">The ARIA attributes defined in the ARIA specifications, and the <span>strong
  native semantics</span> and <span>default implicit ARIA semantics</span> defined below, do not
  have any effect on CSS pseudo-class matching, user interface modalities that don't use assistive
  technologies, or the default actions of user interaction events as described in this
  specification.</p> <!-- this is a truism, in that there are no requirements that require that
  those attributes have such an effect, and no requirements that relax the requirements on those
  effects such that they could be affected by those attributes -->

  </div>

  <!--START FORK-->
  <h5 id="aria-role-attribute">ARIA Role Attribute</h5>

  <p>Any HTML element, other than elements having <a
  href="#sec-strong-native-semantics">Strong Native Semantics</a>
  of <span data-x="concept-role-none">No role</span>, may have an ARIA <code data-x="attr-aria-role">role</code> attribute specified.
  This is an ARIA Role attribute as defined by <a href="#refsARIA">\[ARIA]</a>
  <a href="http://www.w3.org/TR/wai-aria/roles#role_definitions">Section
  5.4 Definition of Roles</a>.</p>

  <p>The attribute, if specified, must have a value that is a set of space-separated tokens;
  each token must be a non-abstract role defined in the WAI-ARIA specification
  <a href="#refsARIA">\[ARIA]</a>.</p>

  <div class="impl">

  <p>The WAI-ARIA role that an HTML element has assigned to it is the
  first non-abstract role found in the list of values generated when the
  <code data-x="attr-aria-role">role</code> attribute is split on
  spaces.</p>

  </div>

  <h5 id="state-and-property-attributes">State and Property Attributes</h5>

  <p>Every HTML element may have ARIA state and property attributes
  specified. These attributes are defined by <a
  href="#refsARIA">\[ARIA]</a> in <a
  href="http://www.w3.org/TR/wai-aria/states_and_properties#state_prop_def">Section
  6.6, Definitions of States and Properties (all aria-*
  attributes)</a>.</p>

  <p>A subset of the ARIA State and Property attributes are defined as "<dfn id="aria-global-attributes">Global States and Properties</dfn>" in
  <a href="http://www.w3.org/TR/wai-aria/states_and_properties#global_states">Section 6.4. Global States and Properties</a>
  of the <a href="#refsARIA">\[ARIA]</a> Specification.</p>

  <p>These attributes, if specified, must have a value that is the ARIA
  value type in the "Value" field of the definition for the state or
  property, mapped to the appropriate HTML value type according to <a
  href="#refsARIA">\[ARIA]</a> <a
  href="http://www.w3.org/TR/wai-aria/appendices#typemapping">Section
  10.2 Mapping WAI-ARIA Value types to languages</a> using the HTML 5
  mapping.</p>

  <p>ARIA State and Property attributes can be used on any element. They
  are not always meaningful, however, and in such cases user agents
  might not perform any processing aside from including them in the DOM.
  State and property attributes are processed according to the
  requirements of the sections <a
  href="#sec-strong-native-semantics">Strong Native Semantics</a> and <a
  href="#sec-implicit-aria-semantics">Implicit ARIA semantics</a>, as
  well as <a href="#refsARIA">\[ARIA]</a> and <a
  href="#refsARIAIMPL">\[ARIAIMPL]</a>.</p>

 <!-- needs work <p class="note">Although many elements are omitted from the following tables and therefore do not have
 any normative constraints on which ARIA roles, states and properties may be applied, they may have <em>meaning</em>
 and this meaning may be represented in roles, states and properties not provided by <abbr title="Accessible Rich Internet Applications">ARIA</abbr>, but present in <a href="http://www.w3.org/TR/html-aapi/#introduction-accessibility-apis">accessibility APIs</a>. It is therefore recommended that authors consider first using a <code>role</code> attribute on semantically neutral
 element such as a <code>div</code> or <code>span</code>. </p> -->

  <h5 id="sec-strong-native-semantics">Strong Native Semantics</h5>

  <!--END FORK-->

  <p>The following table defines the <span>strong native semantics</span> and corresponding
  <span>default implicit ARIA semantics</span> that apply to <span>HTML elements</span>. Each
  language feature (element or attribute) in a cell in the first column implies the ARIA semantics
  (any role, states, and properties) given in the cell in the second column of the same row. <span
  class="impl">When multiple rows apply to an element, the role from the last row to define a role
  must be applied, and the states and properties from all the rows must be combined.</span></p>

  <!--START FORK-->
  <p class="auth">Documents must not use any <code data-x="attr-aria-role">role</code> values with elements
  in the following table other than the corresponding role value (if any) as listed for that element in the second column,
  or the <code data-x="attr-aria-role">role</code> value "<code>presentation</code>", if the second column indicates that element's
  semantics can be removed by using the "<code>presentation</code>" <code data-x="attr-aria-role">role</code> value.</p>

 <p class="note" id="aria-usage-note">In the majority of cases setting an ARIA <code data-x="attr-aria-role">role</code> and/or <code
  data-x="attr-aria-*">aria-*</code> attribute that matches the <span>default implicit ARIA semantics</span> is
  unnecessary and not recommended as these properties are already set by the browser.</p>



  <table id="table-aria-strong">
   <thead>
    <tr>

     <th>Language feature

     <th><span>Strong native semantics</span> and <span>default implicit ARIA semantics</span>

   <tbody>

    <tr>

     <td><code>area</code> element that creates a <span>hyperlink</span>

     <td><code title="">link</code> role

    <tr>

     <td><code>base</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>datalist</code> element

     <td><code title="">listbox</code> role, with the <code title="">aria-multiselectable</code> property set to "false"

    <tr>

     <td><code>details</code> element

     <td><code title="">aria-expanded</code> state set to "true" if the element's <code data-x="attr-details-open">open</code> attribute is present, and set to "false" otherwise

    <tr>
     <td><code>dialog</code> element without an <code data-x="attr-dialog-open">open</code> attribute
     <td>The <code title="">aria-hidden</code> state set to "true"
      <!--START FORK-->
     <tr>
     <td><code>fieldset</code> element
     <td><code title="">group</code> role
     (semantics may be removed by using the <code title="">presentation</code> role)

     <tr>
     <td><code>footer</code> element that is not a descendant of an <code>article</code> or <code>section</code> element.
     <td><code title="">contentinfo</code> role
     (semantics may be removed by using the <code title="">presentation</code> role)

   <!--FORK remove duplicate fieldset SF-->

    <tr>

     <td><code>head</code> element

     <td><span data-x="concept-role-none">No role</span>
     <!--END FORK-->
     <tr>

     <td><code>header</code> element that is not a descendant of an <code>article</code> or <code>section</code> element.

     <td><code title="">banner</code> role
     (semantics may be removed by using the <code title="">presentation</code> role)

    <tr>

     <td><code>hr</code> element

     <td><code title="">separator</code> role
     (semantics may be removed by using the <code title="">presentation</code> role)

    <tr>

     <td><code>html</code> element
     <td><span data-x="concept-role-none">No role</span>
<!-- FORK START see bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=21579 and https://www.w3.org/Bugs/Public/show_bug.cgi?id=26149 SF-->
    <tr>
     <td><code>img</code> element whose <code data-x="attr-img-alt">alt</code> attribute's value is empty
     <td><span data-x="concept-role-none">No role</span>. User Agents must identify the <code>img</code> as
     ignored or omit it from the accessibility tree.
    <tr>
     <td><code>img</code> element whose <code data-x="attr-img-alt">alt</code> attribute's value is empty and whose <code
  data-x="attr-hyperlink-usemap">usemap</code> attribute has a <span>valid
  hash-name reference</span> to a <code>map</code> element.
     <td><code title="">img</code> role
 <!-- FORK END -->
    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-checkbox">Checkbox</span> state
     <td><code title="">aria-checked</code> state set to "mixed" if the element's <code data-x="dom-input-indeterminate">indeterminate</code> IDL attribute is true, or "true" if the element's <span data-x="concept-fe-checked">checkedness</span> is true, or "false" otherwise

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-color">Color</span> state
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-date">Date</span> state
     <td><span data-x="concept-role-none">No role</span>, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-datetime">Date and Time</span> state
     <td><span data-x="concept-role-none">No role</span>, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-email">E-mail</span> state with no <span data-x="concept-input-list">suggestions source element</span>
     <td><code title="">textbox</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-file">File Upload</span> state
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-hidden">Hidden</span> state
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-month">Month</span> state
     <td><span data-x="concept-role-none">No role</span>, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-number">Number</span> state
     <td><code title="">spinbutton</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute, the <code title="">aria-valuemax</code> property set to the element's <span data-x="concept-input-max">maximum</span>, the <code title="">aria-valuemin</code> property set to the element's <span data-x="concept-input-min">minimum</span>, and, if the result of applying the <span>rules for parsing floating-point number values</span> to the element's <span data-x="concept-fe-value">value</span> is a number, with the <code title="">aria-valuenow</code> property set to that number

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-password">Password</span> state
     <td><code title="">textbox</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>

     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in
     the <span data-x="attr-input-type-range">Range</span> state and the <code
     data-x="attr-input-multiple">multiple</code> attribute not specified

     <td><code data-x="attr-aria-valuemax">aria-valuemax</code> property set to the element's <span
     data-x="concept-input-max">maximum</span>, and the <code
     data-x="attr-aria-valuemin">aria-valuemin</code> property set to the element's <span
     data-x="concept-input-min">minimum</span>

     <!-- ARIA doesn't currently support a single element with two slider values, so leave the rest
     undefined for now -->

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-reset">Reset Button</span> state
     <td><code title="">button</code> role

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-search">Search</span> state with no <span data-x="concept-input-list">suggestions source element</span>
     <td><code title="">textbox</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-submit">Submit Button</span> state
     <td><code title="">button</code> role

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-tel">Telephone</span> state with no <span data-x="concept-input-list">suggestions source element</span>
     <td><code title="">textbox</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-text">Text</span> state with no <span data-x="concept-input-list">suggestions source element</span>
     <td><code title="">textbox</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-text">Text</span>, <span data-x="attr-input-type-search">Search</span>, <span data-x="attr-input-type-tel">Telephone</span>, <span data-x="attr-input-type-url">URL</span>, or <span data-x="attr-input-type-email">E-mail</span> states with a <span data-x="concept-input-list">suggestions source element</span>
     <td><code title="">combobox</code> role, with the <code title="">aria-owns</code> property set to the same value as the <code data-x="attr-input-list">list</code> attribute, and the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-time">Time</span> state
     <td><span data-x="concept-role-none">No role</span>, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-url">URL</span> state with no <span data-x="concept-input-list">suggestions source element</span>
     <td><code title="">textbox</code> role, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-week">Week</span> state
     <td><span data-x="concept-role-none">No role</span>, with the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-input-readonly">readonly</code> attribute

    <tr>
     <td><code>keygen</code> element
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>label</code> element
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>link</code> element that creates a <span>hyperlink</span>
     <td><code title="">link</code> role
<!--FORK-->
    <tr>
     <td><code>main</code> element
     <td><code title="">main</code> role
     (semantics may be removed by using the <code title="">presentation</code> role)
     <tr>
     <td><code>map</code> element
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>menu</code> element with a <code data-x="attr-menu-type">type</code> attribute in the <span data-x="popup menu state">popup menu</span> state
     <td><span data-x="concept-role-none">No role</span>
     <tr>
     <td><code>menuitem</code> element
     <td><code title="">menuitem</code> role

    <tr>
     <td><code>meta</code> element
     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>meter</code> element
     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>nav</code> element

     <td><code title="">navigation</code> role (semantics may be removed by using the <code title="">presentation</code> role)

    <tr>

     <td><code>noscript</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>optgroup</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>option</code> element that is in a <span data-x="concept-select-option-list">list of
     options</span>

     <td><code data-x="attr-aria-selected">aria-selected</code> and <code
     data-x="attr-aria-checked">aria-checked</code> states set to "true" if the element's <span
     data-x="concept-option-selectedness">selectedness</span> is true, and "false" otherwise

     <!-- we set -selected for when the role is option, and -checked for when it's menuitemradio;
     hopefully having them set when they don't apply is a no-op (the ARIA spec doesn't seem clear
     about this) -->

    <tr>

     <td><code>option</code> element that represents a suggestion in a <code>datalist</code> element
     or that is in a <span data-x="concept-select-option-list">list of options</span> of a
     <code>select</code> element with a <code data-x="attr-select-multiple">multiple</code>
     attribute or a <span data-x="concept-select-size">display size</span> greater than 1

     <td><code data-x="attr-aria-role-option">option</code> role

     <tr>

     <td><code>param</code> element

     <td><span data-x="concept-role-none">No role</span>

     <tr>
     <td><code>picture</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>progress</code> element

     <td><code title="">progressbar</code> role, with, if the progress bar is determinate, the <code title="">aria-valuemax</code> property set to the maximum value of the progress bar, the <code title="">aria-valuemin</code> property set to zero, and the <code title="">aria-valuenow</code> property set to the current value of the progress bar

    <tr>

     <td><code>script</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>
     <td><code>select</code> element with a <code data-x="attr-select-multiple">multiple</code> attribute
     <td><code title="">listbox</code> role, with the <code title="">aria-multiselectable</code> property set to "true"

    <tr>

     <td><code>select</code> element with no <code data-x="attr-select-multiple">multiple</code>
     attribute and with a <span data-x="concept-select-size">display size</span> equal to 1

     <td><code data-x="attr-aria-multiselectable">aria-multiselectable</code> property set to "false"

    <tr>

     <td><code>select</code> element with no <code data-x="attr-select-multiple">multiple</code>
     attribute and with a <span data-x="concept-select-size">display size</span> greater than 1

     <td><code data-x="attr-aria-role-listbox">listbox</code> role, with the <code
     data-x="attr-aria-multiselectable">aria-multiselectable</code> property set to "false"

    <tr>

     <td><code>select</code> element with a <code data-x="attr-select-required">required</code> attribute

     <td>The <code data-x="attr-aria-required">aria-required</code> state set to "true"

    <tr>

     <td><code>source</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>style</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

    <td><code>template</code> element

     <td><span data-x="concept-role-none">No role</span>

    <tr>

     <td><code>textarea</code> element

     <td><code title="">textbox</code> role, with the <code title="">aria-multiline</code> property set to "true", and the <code title="">aria-readonly</code> property set to "true" if the element has a <code data-x="attr-textarea-readonly">readonly</code> attribute
     <tr>
    <td><code>th</code> element with a <code>scope</code> attribute set to <code>row</code>

    <td><code>rowheader</code> role
    <tr>
    <td><code>th</code> element with a <code>scope</code> attribute set to <code title="">col</code>

    <td><code>columnheader</code> role
    <tr>
    <td><code>th</code> element that is a <a href="#sorting-capable-th-element">sorting-capable</a> <code>th</code> element whose column key <span data-x="column key ordinality">ordinality</span> is 1

    <td><code>columnheader</code> role, with the <code>aria-sort</code> state set to "ascending" if the element's <span data-x=#column-sort-direction>column sort direction</a> is <i>normal</i>, and "descending" otherwise.

    <tr>

     <td><code>title</code> element

     <td><span data-x="concept-role-none">No role</span>
     <tr>
<!--FORK START see bug https://www.w3.org/Bugs/Public/show_bug.cgi?id=24313 SF-->
     <td><code>track</code> element

     <td><span data-x="concept-role-none">No role</span>
    <!-- FORK END -->

    <tr>

     <td>Element that is <span data-x="concept-fe-disabled">disabled</span>

     <td>The <code title="">aria-disabled</code> state set to "true"

    <!-- FORK START/END removed hidden from strong semantics see https://www.w3.org/Bugs/Public/show_bug.cgi?id=18574 SF-->

    <tr>
     <td>Element that is a <span>candidate for constraint validation</span> but that does not <span data-x="concept-fv-valid">satisfy its constraints</span>

     <td>The <code title="">aria-invalid</code> state set to "true"

  </table>

  <h5 id="sec-implicit-aria-semantics">Implicit ARIA Semantics</h5>

  <p>Some <span>HTML elements</span> have native semantics that can be overridden. The following
  table lists these elements and their <span>default implicit ARIA semantics</span>, along with the
  restrictions that apply to those elements. Each language feature (element or attribute) in a cell
  in the first column implies, unless otherwise overridden, the ARIA semantic (role, state, or
  property) given in the cell in the second column of the same row, but this semantic may be
  overridden under the conditions listed in the cell in the third column of that row.</p>
<!--FORK-->
  <table id="table-aria-weak">

   <thead>
    <tr>

     <th>Language feature

     <th>Default implicit ARIA semantic

     <th>Restrictions

   <tbody>

    <tr>

     <td><code>a</code> element that creates a <span>hyperlink</span>
     <td><code title="">link</code> role
     <td>If specified, role must be one of the following:
     <code data-x="index-aria-link">link</code>,
     <code data-x="index-aria-button">button</code>,
     <code data-x="index-aria-checkbox">checkbox</code>,
     <code data-x="index-aria-menuitem">menuitem</code>,
     <code data-x="index-aria-menuitemcheckbox">menuitemcheckbox</code>,
     <code data-x="index-aria-menuitemradio">menuitemradio</code>,
     <code title="">option</code>,
     <code title="">radio</code>,
     <code data-x="index-aria-tab">tab</code>,
     or <code data-x="index-aria-treeitem">treeitem</code>

    <tr>
     <td><code>address</code> element
     <td><span data-x="concept-role-none">No role</span>
     <td>If specified, role must be <code title="">contentinfo</code>

    <tr>

     <td><code>article</code> element
     <td><code title="">article</code> role
     <td>If specified, role must be one of the following:
     <code title="">article</code>,
     <code title="">document</code>,
     <code title="">application</code>,
     or <code title="">main</code>

    <tr>

     <td><code>aside</code> element
     <td><code title="">complementary</code> role
     <td>If specified, role must be one of the following:
     <code title="">complementary</code>,
     <code title="">note</code>,
     <code title="">search</code>
     or <code title="">presentation</code>

    <tr>

     <td><code>audio</code> element
     <td><span data-x="concept-role-none">No role</span>
     <td>If specified, role must be <code title="">application</code>

     <tr>
     <td><code>body</code> element
     <td><code title="">document</code> role
     <td>If specified, role must be either
     <code title="">document</code>
     or <code title="">application</code>

     <tr>
     <td><code>button</code> element
     <td><code title="">button</code> role
     <td>If specified, role must be one of the following:
     <code title="">button</code>,
     <code title="">link</code>,
     <code title="">menuitem</code>,
     <code title="">menuitemcheckbox</code>,
     <code title="">menuitemradio</code>
     or <code title="">radio</code>

    <tr>

     <td><code>details</code> element
     <td><code title="">group</code> role
     <td>If specified, role must be a role that supports <code title="">aria-expanded</code>

    <tr>

     <td><code>dialog</code> element
     <td><code title="">dialog</code> role
     <td>If specified, role must be one of the following:
      <code title="">alert</code>,
      <code title="">alertdialog</code>,
      <code title="">application</code>,
      <code title="">contentinfo</code>,
      <code title="">dialog</code>,
      <code title="">document</code>,
      <code title="">log</code>,
      <code title="">main</code>,
      <code title="">marquee</code>,
      <code title="">region</code>,
      <code title="">search</code>, or
      <code title="">status</code>

    <tr>

     <td><code>embed</code> element
     <td><span data-x="concept-role-none">No role</span>
     <td>If specified, role must be one of the following:
     <code title="">application</code>,
     <code title="">document</code>,
     <code title="">img</code>
     or <code title="">presentation</code>

    <tr>
     <td><code>h1</code> element
     <td><code title="">heading</code> role, with the
     <code title="">aria-level</code> property set to the element's <span>outline depth</span>
     <td>If specified, role must be one of the following:
     <code title="">heading</code>,
     <code title="">tab</code>
     or <code title="">presentation</code>

    <tr>
     <td><code>h2</code> element
     <td><code title="">heading</code> role, with the <code title="">aria-level</code>
     property set to the element's <span>outline depth</span>
     <td>If specified, role must be one of the following:
     <code title="">heading</code>,
     <code title="">tab</code>
     or <code title="">presentation</code>

    <tr>
     <td><code>h3</code> element
     <td><code title="">heading</code> role, with the <code title="">aria-level</code>
     property set to the element's <span>outline depth</span>
     <td>If specified, role must be one of the following:
     <code title="">heading</code>,
     <code title="">tab</code>
     or <code title="">presentation</code>

    <tr>
     <td><code>h4</code> element
     <td><code title="">heading</code> role, with the <code title="">aria-level</code>
     property set to the element's <span>outline depth</span>
     <td>If specified, role must be one of the following:
     <code title="">heading</code>,
     <code title="">tab</code>
     or <code title="">presentation</code>

    <tr>
     <td><code>h5</code> element
     <td><code title="">heading</code> role, with the <code title="">aria-level</code>
     property set to the element's <span>outline depth</span>
     <td>If specified, role must be one of the following:
     <code title="">heading</code>,
     <code title="">tab</code>
     or <code title="">presentation</code>

    <tr>
     <td><code>h6</code> element
     <td><code title="">heading</code> role, with the <code title="">aria-level</code> property set to the element's <span>outline depth</span>
     <td>If specified, role must be one of the following:
     <code title="">heading</code>,
     <code title="">tab</code>
     or <code title="">presentation</code>

    <tr>

     <td><code>iframe</code> element
     <td><span data-x="concept-role-none">No role</span>
     <td>If specified, role must be one of the following:
     <code title="">application</code>,
     <code title="">document</code>,
     <code title="">img</code>,
     or <code title="">presentation</code>

    <tr>
     <td><code>img</code> element whose <code data-x="attr-img-alt">alt</code> attribute's value is absent
     <td><code title="">img</code> role
     <td>No restrictions

    <tr>
     <td><code>img</code> element whose <code data-x="attr-img-alt">alt</code> attribute's value is present and not empty
     <td><code title="">img</code> role
     <td>No restrictions

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-button">Button</span> state
     <td><code title="">button</code> role
     <td>If specified, role must be one of the following:
     <code title="">button</code>,
     <code title="">link</code>,
     <code title="">menuitem</code>,
     <code title="">menuitemcheckbox</code>,
     <code title="">menuitemradio</code>
     or <code title="">radio</code>

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-checkbox">Checkbox</span> state
     <td><code title="">checkbox</code> role
     <td>If specified, role must be either
     <code title="">checkbox</code>
     or <code title="">menuitemcheckbox</code>

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-image">Image Button</span> state
     <td><code title="">button</code> role
     <td>If specified, role must be one of the following:
     <code title="">button</code>,
     <code title="">link</code>,
     <code title="">menuitem</code>,
     <code title="">menuitemcheckbox</code>,
     <code title="">menuitemradio</code>
     or <code title="">radio</code>

    <tr>
     <td><code>input</code> element with a <code data-x="attr-input-type">type</code> attribute in the <span data-x="attr-input-type-radio">Radio Button</span> state
     <td><code title="">radio</code> role
     <td>If specified, role must be either
     <code title="">radio</code>
     or <code title="">menuitemradio</code>

     <tr>
     <td><code>input</code>, <code>select</code> or <code>textarea</code> element with a <code>required</code> attribute
     <td>The <code title="">aria-required</code> state set to "true"
     <td>If specified, the <code title="">aria-required</code> state must be set to "true"

     <tr>
     <td><code>input</code>, <code>select</code> or <code>textarea</code> element without a <code>required</code> attribute
     <td><code title="">aria-required</code> set to "false"
     <td>If specified, the <code title="">aria-required</code> state set to "true" or "false"

    <tr>
     <td><code>li</code> element whose parent is an <code>ol</code> or <code>ul</code> element

     <td><code data-x="attr-aria-role-listitem">listitem</code> role

     <td>If specified, role must be one of the following:
      <code data-x="attr-aria-role-listitem">listitem</code>,
      <code data-x="attr-aria-role-listitem">menuitem</code>,
      <code data-x="attr-aria-role-menuitemcheckbox">menuitemcheckbox</code>,
      <code data-x="attr-aria-role-menuitemradio">menuitemradio</code>,
      <code data-x="attr-aria-role-option">option</code>,
      <code data-x="attr-aria-role-radio">radio</code>,
      <code data-x="attr-aria-role-tab">tab</code>,
      <code data-x="attr-aria-role-treeitem">treeitem</code>,
      <!-- FORK -->
      or <code data-x="attr-aria-role-presentation">presentation</code>
      <!-- FORK END -->

    <tr>
     <td><code>menu</code> element with a <code data-x="attr-menu-type">type</code> attribute in the <span data-x="toolbar state">toolbar</span> state
     <td><code title="">toolbar</code> role
     <td>If specified, role must be one of the following:
     <code title="">directory</code>,
     <code title="">list</code>,
     <code title="">listbox</code>,
     <code title="">menu</code>,
     <code title="">menubar</code>,
     <code title="">tablist</code>,
     <code title="">toolbar</code>, or
     <code title="">tree</code>

    <tr>

     <td><code>object</code> element
     <td><span data-x="concept-role-none">No role</span>
     <td>If specified, role must be one of the following:
     <code title="">application</code>,
     <code title="">document</code>,
     <code title="">img</code>,
     or <code title="">presentation</code>

    <tr>

     <td><code>ol</code> element

     <td><code data-x="attr-aria-role-list">list</code> role

     <td>If specified, role must be one of the following:
      <code data-x="attr-aria-role-directory">directory</code>,
      <code data-x="attr-aria-role-group">group</code>,
      <code data-x="attr-aria-role-list">list</code>,
      <code data-x="attr-aria-role-listbox">listbox</code>,
      <code data-x="attr-aria-role-menu">menu</code>,
      <code data-x="attr-aria-role-menubar">menubar</code>,
      <code data-x="attr-aria-role-radiogroup">radiogroup</code>,
      <code data-x="attr-aria-role-tablist">tablist</code>,
      <code data-x="attr-aria-role-toolbar">toolbar</code>,
      <code data-x="attr-aria-role-tree">tree</code>,
      <!-- FORK -->
      or <code data-x="attr-aria-role-presentation">presentation</code>
      <!-- FORK END -->

    <tr>

     <td><code>option</code> element that is in a <span data-x="concept-select-option-list">list of
     options</span> of a <code>select</code> element with no <code
     data-x="attr-select-multiple">multiple</code> attribute and with a <span
     data-x="concept-select-size">display size</span> equal to 1

     <td><code data-x="attr-aria-role-option">option</code> role

     <td>If specified, role must be one of the following:
      <code data-x="attr-aria-role-option">option</code>,
      <code data-x="attr-aria-role-menuitem">menuitem</code>,
      <code data-x="attr-aria-role-menuitemradio">menuitemradio</code>, or
      <code data-x="attr-aria-role-separator">separator</code>

    <tr>

     <td><code>output</code> element
     <td><code title="">status</code> role <p class="note"><a href="https://www.w3.org/Bugs/Public/show_bug.cgi?id=26135">bug 26135</a> - is role=status correct for output element?</p>
     <td>No restrictions

    <tr>

     <td><code>section</code> element
     <td><code title="">region</code> role <p class="note">It is strongly recommended that user agents such as screen readers
        only convey the presence of, and provide navigation for <code>section</code> elements, when the <code>section</code> element has
        an accessible name.</p>
     <td>If specified, role must be one of the following:
      <code title="">alert</code>,
      <code title="">alertdialog</code>,
      <code title="">application</code>,
      <code title="">contentinfo</code>,
      <code title="">dialog</code>,
      <code title="">document</code>,
      <code title="">log</code>,
      <code title="">main</code>,
      <code title="">marquee</code>,
      <code title="">region</code>,
      <code title="">search</code>,
      <code title="">status</code>
      or <code title="">presentation</code>

     <!-- FORK removing duplicate cells added in whatwg cherry pick https://github.com/w3c/html/commit/368094b2a8d8440fcad29d5bef651baf3c0693d1 -->

    <tr>

     <td><code>select</code> element with no <code data-x="attr-select-multiple">multiple</code>
     attribute and with a <span data-x="concept-select-size">display size</span> equal to 1

     <td><code data-x="attr-aria-role-listbox">listbox</code> role

     <td>Role must be either
      <code data-x="attr-aria-role-listbox">listbox</code> or
      <code data-x="attr-aria-role-menu">menu</code>

    <tr>

     <td><code>summary</code> element with no <span>Interactive content</span> descendant

     <td><span data-x="concept-role-none">No role</span>

     <td>If specified, role must be <code title="">button</code>

    <tr>

     <td><code>ul</code> element

     <td><code data-x="attr-aria-role-list">list</code> role

     <td>If specified, role must be one of the following:
      <code data-x="attr-aria-role-directory">directory</code>,
      <code data-x="attr-aria-role-group">group</code>,
      <code data-x="attr-aria-role-list">list</code>,
      <code data-x="attr-aria-role-listbox">listbox</code>,
      <code data-x="attr-aria-role-menu">menu</code>,
      <code data-x="attr-aria-role-menubar">menubar</code>,
      <code data-x="attr-aria-role-radiogroup">radiogroup</code>,
      <code data-x="attr-aria-role-tablist">tablist</code>,
      <code data-x="attr-aria-role-toolbar">toolbar</code>,
      <code data-x="attr-aria-role-tree">tree</code>,
      <!-- FORK -->
      or <code data-x="attr-aria-role-presentation">presentation</code>
      <!-- FORK END -->

    <tr>

     <td><code>video</code> element
     <td><span data-x="concept-role-none">No role</span>
     <td>If specified, role must be <code title="">application</code>
      <tr>
     <td>Element with a <code data-x="attr-hidden">hidden</code> attribute
     <td>The <code title="">aria-hidden</code> state set to "true"
     <td>If specified, the <code title="">aria-hidden</code> state set to "true" or "false"
     <tr>
     <td>Element without a <code data-x="attr-hidden">hidden</code> attribute
     <td>The <code title="">aria-hidden</code> state set to "false"
     <td>If specified, the <code title="">aria-hidden</code> state set to "true" or "false"
  </table>

  <!--START FORK-->
  <p>The entry "<dfn data-x="concept-role-none">no role</dfn>", when used as a <span data-x="strong
  native semantics">strong native semantic</span>, means that no role can be used and that the
  user agent has no default mapping to ARIA roles. (However, it could have its own mappings to the
  accessibility layer.) When used as a <span data-x="default implicit ARIA semantics">default
  implicit ARIA semantic</span>, it means the user agent has no default mapping to ARIA roles.
  (However, it could have its own mappings to the accessibility layer.)</p>

  <!--END FORK-->

  <div class="impl">

<!--END dev-html--><!--END complete--><!--START FORK-->
  <p>The WAI-ARIA specification neither requires or forbids user
  agents from enhancing native presentation and interaction behaviors
  on the basis of WAI- ARIA markup. Even mainstream user agents might
  choose to expose metadata or navigational features directly or via
  user-installed extensions; for example, exposing required form
  fields or landmark navigation. User agents are encouraged to
  maximize their usefulness to users, including users without
  disabilities.</p>
<!--START dev-html--><!--START complete--><!-- EDITORIAL --><!--END FORK-->

  <p>Conformance checkers are encouraged to phrase errors such that authors are encouraged to use
  more appropriate elements rather than remove accessibility annotations. For example, if an
  <code>a</code> element is marked as having the <code title="">button</code>
  role, a conformance checker could say "Use a more appropriate element to represent a button, for
  example a <code>button</code> element or an <code>input</code> element" rather than "The <code
  title="">button</code> role cannot be used with <code>a</code> elements".</p>

  </div>

  <div class="example">

   <p>These features can be used to make accessibility tools render content to their users in more
   useful ways. For example, ASCII art, which is really an image, appears to be text, and in the
   absence of appropriate annotations would end up being rendered by screen readers as a very
   painful reading of lots of punctuation. Using the features described in this section, one can
   instead make the ATs skip the ASCII art and just read the caption:</p>

   <pre>&lt;figure <strong>role="img" aria-labelledby="fish-caption"</strong>> <!-- that's "l a b e l l e d" with TWO "l"s -->
 &lt;pre>
 o           .'`/
     '      /  (
   O    .-'` ` `'-._      .')
      _/ (o)        '.  .' /
      )       )))     >&lt;  &lt;
      `\  |_\      _.'  '. \
        '-._  _ .-'       '.)
    jgs     `\__\
 &lt;/pre>
 &lt;figcaption <strong>id="fish-caption"</strong>>
  Joan G. Stark, "&lt;cite>fish&lt;/cite>".
  October 1997. ASCII on electrons. 28&times;8.
 &lt;/figcaption>
&lt;/figure>
   </pre>

   <!-- source: http://www.geocities.com/SoHo/7373/aquatic.htm#fish -->

</div>

<!-- FORK start see bug 21898 SF-->
<div class="author">
<h5 id="allowed-aria-roles,-states-and-properties">Allowed ARIA roles, states and properties</h5>
<p><em>This section is non-normative.</em></p>
<p class="note">The following table provides an informative reference to the ARIA roles, states and properties permitted for use in HTML. All ARIA roles, states and properties are normatively defined in the <a href="#refsARIA">\[ARIA]</a> specification. Links to ARIA roles, states and properties in the table reference the normative <a href="#refsARIA">\[ARIA]</a> definitions.</p>
<table>
<caption><abbr title="Accessible Rich Internet Applications">ARIA</abbr> Roles, States and Properties</caption>
<thead>
<tr>
<th>Role</th>
<th>Description</th>
<th>Required Properties</th>
<th>Supported Properties</th>
</tr>
</thead>
<tbody>
<tr><td tabindex="-1" id="index-aria-global">any</td>
<td>ARIA <a href="#aria-global-attributes">global states and properties</a> can be used on any HTML element.</td>
<td>none</td>
<td>
<ul>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-atomic">aria-atomic</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-busy">aria-busy (state)</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-controls">aria-controls</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-describedby">aria-describedby</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-disabled">aria-disabled (state)</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-dropeffect">aria-dropeffect</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-flowto">aria-flowto</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-grabbed">aria-grabbed (state)</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-haspopup">aria-haspopup</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-hidden">aria-hidden (state)</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-invalid">aria-invalid (state)</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-label">aria-label</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby">aria-labelledby</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-live">aria-live</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-owns">aria-owns</a></code></li>
<li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-relevant">aria-relevant</a></code></li>
</ul>
<tr><td tabindex="-1" id="index-aria-alert"><code><a href="http://www.w3.org/TR/wai-aria/roles#alert">alert</a></code></td>
<td>A message with important, and usually time-sensitive, information. See related <code title="">alertdialog</code> and <code title="">status</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-alertdialog"><code><a href="http://www.w3.org/TR/wai-aria/roles#alertdialog">alertdialog</a></code></td>
<td>A type of dialog that contains an alert message, where initial focus goes to an element within the dialog. See related <code title="">alert</code> and <code title="">dialog</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-application"><code><a href="http://www.w3.org/TR/wai-aria/roles#application">application</a></code></td>
<td>A region declared as a web application, as opposed to a web document.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-article"><code><a href="http://www.w3.org/TR/wai-aria/roles#article">article</a></code></td>
<td>A section of a page that consists of a composition that forms an independent part of a document, page, or site.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-banner"><code><a href="http://www.w3.org/TR/wai-aria/roles#banner">banner</a></code></td>
<td>A region that contains mostly site-oriented content, rather than page-specific content.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-button"><code><a href="http://www.w3.org/TR/wai-aria/roles#button">button</a></code></td>
<td>An input that allows for user-triggered actions when clicked or pressed. See related <code title="">link</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-pressed">aria-pressed (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-checkbox"><code><a href="http://www.w3.org/TR/wai-aria/roles#checkbox">checkbox</a></code></td>
<td>A checkable input that has three possible values: true, false, or mixed.</td>
<td><ul>
 <li><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-checked"><code>aria-checked (state)</code></a></li>
</ul></td>
<td><code></code></td></tr>
<tr><td tabindex="-1" id="index-aria-columnheader"><code><a href="http://www.w3.org/TR/wai-aria/roles#columnheader">columnheader</a></code></td>
<td>A cell containing header information for a column.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-sort">aria-sort</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-readonly">aria-readonly</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-combobox"><code><a href="http://www.w3.org/TR/wai-aria/roles#combobox">combobox</a></code></td>
<td>A presentation of a select; usually similar to a textbox where users can type ahead to select an option, or type to enter arbitrary text as a new item in the list. See related <code title="">listbox</code>.</td>
<td><ul>
 <li><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded"><code>aria-expanded (state)</code></a></li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-autocomplete">aria-autocomplete</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-complementary"><code><a href="http://www.w3.org/TR/wai-aria/roles#complementary">complementary</a></code></td>
<td>A supporting section of the document, designed to be complementary to the main content at a similar level in the DOM hierarchy, but remains meaningful when separated from the main content.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-contentinfo"><code><a href="http://www.w3.org/TR/wai-aria/roles#contentinfo">contentinfo</a></code></td>
<td>A large perceivable region that contains information about the parent document.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-definition"><code><a href="http://www.w3.org/TR/wai-aria/roles#definition">definition</a></code></td>
<td>A definition of a term or concept.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-dialog"><code><a href="http://www.w3.org/TR/wai-aria/roles#dialog">dialog</a></code></td>
<td>A dialog is an application window that is designed to interrupt the current processing of an application in order to prompt the user to enter information or require a response. See related <code title="">alertdialog</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-directory"><code><a href="http://www.w3.org/TR/wai-aria/roles#directory">directory</a></code></td>
<td>A list of references to members of a group, such as a static table of contents.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-document"><code><a href="http://www.w3.org/TR/wai-aria/roles#document">document</a></code></td>
<td>A region containing related information that is declared as document content, as opposed to a web application.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-form"><code><a href="http://www.w3.org/TR/wai-aria/roles#form">form</a></code></td>
<td>A landmark region that contains a collection of items and objects that, as a whole, combine to create a form. See related <code title="">search</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-grid"><code><a href="http://www.w3.org/TR/wai-aria/roles#grid">grid</a></code></td>
<td>A grid is an interactive control which contains cells of tabular data arranged in rows and columns, like a table.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-multiselectable">aria-multiselectable</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-readonly">aria-readonly</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-gridcell"><code><a href="http://www.w3.org/TR/wai-aria/roles#gridcell">gridcell</a></code></td>
<td>A cell in a grid or treegrid.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-readonly">aria-readonly</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-group"><code><a href="http://www.w3.org/TR/wai-aria/roles#group">group</a></code></td>
<td>A set of user interface objects which are not intended to be included in a page summary or table of contents by assistive technologies.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-heading"><code><a href="http://www.w3.org/TR/wai-aria/roles#heading">heading</a></code></td>
<td>A heading for a section of the page.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-img"><code><a href="http://www.w3.org/TR/wai-aria/roles#img">img</a></code></td>
<td>A container for a collection of elements that form an image.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-link"><code><a href="http://www.w3.org/TR/wai-aria/roles#link">link</a></code></td>
<td>An interactive reference to an internal or external resource that, when activated, causes the user agent to navigate to that resource. See related <code title="">button</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-list"><code><a href="http://www.w3.org/TR/wai-aria/roles#list">list</a></code></td>
<td>A group of non-interactive list items. See related <code title="">listbox</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-listbox"><code><a href="http://www.w3.org/TR/wai-aria/roles#listbox">listbox</a></code></td>
<td>A widget that allows the user to select one or more items from a list of choices. See related <code title="">combobox</code> and <code title="">list</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-multiselectable">aria-multiselectable</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-listitem"><code><a href="http://www.w3.org/TR/wai-aria/roles#listitem">listitem</a></code></td>
<td>A single item in a <code title="">list</code> or <code title="">directory</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset">aria-posinset</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize">aria-setsize</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-log"><code><a href="http://www.w3.org/TR/wai-aria/roles#log">log</a></code></td>
<td>A type of live region where new information is added in meaningful order and old information may disappear. See related <code title="">marquee</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-main"><code><a href="http://www.w3.org/TR/wai-aria/roles#main">main</a></code></td>
<td>The main content of a document.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-marquee"><code><a href="http://www.w3.org/TR/wai-aria/roles#marquee">marquee</a></code></td>
<td>A type of live region where non-essential information changes frequently. See related <code title="">log</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-math"><code><a href="http://www.w3.org/TR/wai-aria/roles#math">math</a></code></td>
<td>Content that represents a mathematical expression. </td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-menu"><code><a href="http://www.w3.org/TR/wai-aria/roles#menu">menu</a></code></td>
<td>A type of widget that offers a list of choices to the user.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-menubar"><code><a href="http://www.w3.org/TR/wai-aria/roles#menubar">menubar</a></code></td>
<td>A presentation of menu that usually remains visible and is usually presented horizontally.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-menuitem"><code><a href="http://www.w3.org/TR/wai-aria/roles#menuitem">menuitem</a></code></td>
<td>An option in a group of choices contained by a <code title="">menu</code> or <code title="">menubar</code>.</td>
<td>none</td>
<td><code></code></td></tr>
<tr><td tabindex="-1" id="index-aria-menuitemcheckbox"><code><a href="http://www.w3.org/TR/wai-aria/roles#menuitemcheckbox">menuitemcheckbox</a></code></td>
<td>A checkable menuitem that has three possible values: true, false, or mixed.</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-checked">aria-checked (state)</a></code></li>
</ul></td>
<td><code></code></td></tr>
<tr><td tabindex="-1" id="index-aria-menuitemradio"><code><a href="http://www.w3.org/TR/wai-aria/roles#menuitemradio">menuitemradio</a></code></td>
<td>A checkable menuitem in a group of <code title="">menuitemradio</code> roles, only one of which can be checked at a time.</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-checked">aria-checked (state)</a></code></li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset">aria-posinset</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize">aria-setsize</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-navigation"><code><a href="http://www.w3.org/TR/wai-aria/roles#navigation">navigation</a></code></td>
<td>A collection of navigational elements (usually links) for navigating the document or related documents.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-note"><code><a href="http://www.w3.org/TR/wai-aria/roles#note">note</a></code></td>
<td>A section whose content is parenthetic or ancillary to the main content of the resource.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-option"><code><a href="http://www.w3.org/TR/wai-aria/roles#option">option</a></code></td>
<td>A selectable item in a select list.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-checked">aria-checked (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset">aria-posinset</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize">aria-setsize</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-presentation"><code><a href="http://www.w3.org/TR/wai-aria/roles#presentation">presentation</a></code></td>
<td>An element whose implicit native role semantics will not be mapped to the accessibility API.</td>
<td>none</td>
<td><code></code></td></tr>
<tr><td tabindex="-1" id="index-aria-progressbar"><code><a href="http://www.w3.org/TR/wai-aria/roles#progressbar">progressbar</a></code></td>
<td>An element that displays the progress status for tasks that take a long time.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemax">aria-valuemax</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemin">aria-valuemin</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuenow">aria-valuenow</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuetext">aria-valuetext</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-radio"><code><a href="http://www.w3.org/TR/wai-aria/roles#radio">radio</a></code></td>
<td>A checkable input in a group of radio roles, only one of which can be checked at a time.</td>
<td><ul>
 <li><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-checked"><code>aria-checked (state)</code></a></li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset">aria-posinset</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize">aria-setsize</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-radiogroup"><code><a href="http://www.w3.org/TR/wai-aria/roles#radiogroup">radiogroup</a></code></td>
<td>A group of radio buttons.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-region"><code><a href="http://www.w3.org/TR/wai-aria/roles#region">region</a></code></td>
<td>A large perceivable section of a web page or document, that the author feels is important enough to be included in a page summary or table of contents, for example, an area of the page containing live sporting event statistics.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-row"><code><a href="http://www.w3.org/TR/wai-aria/roles#row">row</a></code></td>
<td>A row of cells in a grid.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-rowgroup"><code><a href="http://www.w3.org/TR/wai-aria/roles#rowgroup">rowgroup</a></code></td>
<td>A group containing one or more row elements in a grid.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-rowheader"><code><a href="http://www.w3.org/TR/wai-aria/roles#rowheader">rowheader</a></code></td>
<td>A cell containing header information for a row in a grid.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-sort">aria-sort</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-readonly">aria-readonly</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-scrollbar"><code><a href="http://www.w3.org/TR/wai-aria/roles#scrollbar">scrollbar</a></code></td>
<td>A graphical object that controls the scrolling of content within a viewing area, regardless of whether the content is fully displayed within the viewing area.</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-controls">aria-controls</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-orientation">aria-orientation</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemax">aria-valuemax</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemin">aria-valuemin</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuenow">aria-valuenow</a></code></li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-search"><code><a href="http://www.w3.org/TR/wai-aria/roles#search">search</a></code></td>
<td>A landmark region that contains a collection of items and objects that, as a whole, combine to create a search facility. See related <code title="">form</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-orientation">aria-orientation</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-separator"><code><a href="http://www.w3.org/TR/wai-aria/roles#separator">separator</a></code></td>
<td>A divider that separates and distinguishes sections of content or groups of menuitems.</td>
<td><ul>
 <li>none</li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuetext">aria-valuetext</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-slider"><code><a href="http://www.w3.org/TR/wai-aria/roles#slider">slider</a></code></td>
<td>A user input where the user selects a value from within a given range.</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemax">aria-valuemax</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemin">aria-valuemin</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuenow">aria-valuenow</a></code></li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-orientation">aria-orientation</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuetext">aria-valuetext</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-spinbutton"><code><a href="http://www.w3.org/TR/wai-aria/roles#spinbutton">spinbutton</a></code></td>
<td>A form of range that expects the user to select from among discrete choices.</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemax">aria-valuemax</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuemin">aria-valuemin</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuenow">aria-valuenow</a></code></li>
</ul></td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-valuetext">aria-valuetext</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-status"><code><a href="http://www.w3.org/TR/wai-aria/roles#status">status</a></code></td>
<td>A container whose content is advisory information for the user but is not important enough to justify an alert, often but not necessarily presented as a status bar. See related <code title="">alert</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-tab"><code><a href="http://www.w3.org/TR/wai-aria/roles#tab">tab</a></code></td>
<td>A grouping label providing a mechanism for selecting the tab content that is to be rendered to the user.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-tablist"><code><a href="http://www.w3.org/TR/wai-aria/roles#tablist">tablist</a></code></td>
<td>A list of tab elements, which are references to tabpanel elements.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-tabpanel"><code><a href="http://www.w3.org/TR/wai-aria/roles#tabpanel">tabpanel</a></code></td>
<td>A container for the resources associated with a <code title="">tab</code>, where each <code title="">tab</code> is contained in a <code title="">tablist</code>.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-textbox"><code><a href="http://www.w3.org/TR/wai-aria/roles#textbox">textbox</a></code></td>
<td>Input that allows free-form text as its value.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-autocomplete">aria-autocomplete</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-multiline">aria-multiline</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-readonly">aria-readonly</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-timer"><code><a href="http://www.w3.org/TR/wai-aria/roles#timer">timer</a></code></td>
<td>A type of live region containing a numerical counter which indicates an amount of elapsed time from a start point, or the time remaining until an end point.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-toolbar"><code><a href="http://www.w3.org/TR/wai-aria/roles#toolbar">toolbar</a></code></td>
<td>A collection of commonly used function buttons represented in compact visual form.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-tooltip"><code><a href="http://www.w3.org/TR/wai-aria/roles#tooltip">tooltip</a></code></td>
<td>A contextual popup that displays a description for an element.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-tree"><code><a href="http://www.w3.org/TR/wai-aria/roles#tree">tree</a></code></td>
<td>A type of list that may contain sub-level nested groups that can be collapsed and expanded.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-multiselectable">aria-multiselectable</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-treegrid"><code><a href="http://www.w3.org/TR/wai-aria/roles#treegrid">treegrid</a></code></td>
<td>A grid whose rows can be expanded and collapsed in the same manner as for a tree.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-multiselectable">aria-multiselectable</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-readonly">aria-readonly</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-activedescendant">aria-activedescendant</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-required">aria-required</a></code></li>
</ul></td></tr>
<tr><td tabindex="-1" id="index-aria-treeitem"><code><a href="http://www.w3.org/TR/wai-aria/roles#treeitem">treeitem</a></code></td>
<td>An option item of a tree. This is an element within a tree that may be expanded or collapsed if it contains a sub-level group of treeitems.</td>
<td>none</td>
<td><ul>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-level">aria-level</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-posinset">aria-posinset</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-setsize">aria-setsize</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-expanded">aria-expanded (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-checked">aria-checked (state)</a></code></li>
 <li><code><a href="http://www.w3.org/TR/wai-aria/states_and_properties#aria-selected">aria-selected (state)</a></code></li>
</ul></td></tr>
</tbody>
</table>
</div>
<!-- FORK end see bug 21898 SF-->